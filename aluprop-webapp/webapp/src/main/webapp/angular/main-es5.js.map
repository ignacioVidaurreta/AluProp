{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/create-property/create-property.component.ts","webpack:///src/app/components/create-property/create-property.component.html","webpack:///src/app/components/detailed-property/create-proposal-modal/create-proposal-modal.component.ts","webpack:///src/app/components/detailed-property/create-proposal-modal/create-proposal-modal.component.html","webpack:///src/app/components/detailed-property/detailed-property.component.ts","webpack:///src/app/components/detailed-property/detailed-property.component.html","webpack:///src/app/components/detailed-property/interested-users-modal/interested-users-modal.component.ts","webpack:///src/app/components/detailed-property/interested-users-modal/interested-users-modal.component.html","webpack:///src/app/components/error/error.component.ts","webpack:///src/app/components/error/error.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/home/property-grid/property-grid.component.ts","webpack:///src/app/components/home/property-grid/property-grid.component.html","webpack:///src/app/components/home/property-grid/property-item/property-item.component.ts","webpack:///src/app/components/home/property-grid/property-item/property-item.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/navbar/notifications-bar/notifications-bar.component.ts","webpack:///src/app/components/navbar/notifications-bar/notifications-bar.component.html","webpack:///src/app/components/navbar/notifications-bar/notifications-menu/notifications-menu.component.ts","webpack:///src/app/components/navbar/notifications-bar/notifications-menu/notifications-menu.component.html","webpack:///src/app/components/navbar/search-bar/search-bar.component.ts","webpack:///src/app/components/navbar/search-bar/search-bar.component.html","webpack:///src/app/components/navbar/search-bar/search-filters/search-filters.component.ts","webpack:///src/app/components/navbar/search-bar/search-filters/search-filters.component.html","webpack:///src/app/components/notifications/notifications.component.ts","webpack:///src/app/components/notifications/notifications.component.html","webpack:///src/app/components/profile/interests-table/interests-table.component.ts","webpack:///src/app/components/profile/interests-table/interests-table.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/profile/properties-table/properties-table.component.ts","webpack:///src/app/components/profile/properties-table/properties-table.component.html","webpack:///src/app/components/profile/proposals-table/proposals-table.component.ts","webpack:///src/app/components/profile/proposals-table/proposals-table.component.html","webpack:///src/app/components/proposal/proposal-users-table/proposal-users-table.component.ts","webpack:///src/app/components/proposal/proposal-users-table/proposal-users-table.component.html","webpack:///src/app/components/proposal/proposal.component.ts","webpack:///src/app/components/proposal/proposal.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/metadata.service.ts","webpack:///src/app/models/property.ts","webpack:///src/app/models/user.ts","webpack:///src/app/models/userProposal.ts","webpack:///src/app/modules/material.module.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/image.service.ts","webpack:///src/app/services/notification.service.ts","webpack:///src/app/services/property.service.ts","webpack:///src/app/services/proposal.service.ts","webpack:///src/app/services/token-interceptor.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","translate","setDefaultLang","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","loader","useFactory","HttpLoaderFactory","deps","schemas","declarations","providers","bootstrap","http","CreatePropertyComponent","propertyService","metadataService","translateService","domSanitizer","propertyTypeOptions","House","Apartment","Loft","privacyLevelOption","rules","services","createPropertyForm","pictures","name","required","description","propertyType","neighborhood","privacy","capacity","pattern","rent","tooManyFiles","notEnoughFiles","currentlyUploadedImages","createdProperty","languageChangedSub","onLangChange","subscribe","newLang","translateRulesAndServices","translateMetadataArray","rulesSub","getAllRules","servicesSub","getAllServices","neighborhoodsSub","getAllNeighborhoods","neighborhoods","publishPropertySub","unsubscribe","i","splice","event","files","target","length","file","reader","FileReader","onload","push","result","readAsDataURL","generatePropertyFromForm","publishProperty","property","console","log","input","translatedText","get","images","forEach","image","index","mainImage","split","controls","value","caption","neighbourhood","privacyLevel","price","detectFiles","CreateProposalModalComponent","dialogRef","data","proposalService","selectedOptions","showErrorMaxGuests","users","selectionChange","s","selected","option","close","invitedUsersIds","user","createProposalSub","createProposal","proposal","$event","selectedOption","dateOfBirth","diff","numberOfPeople","DetailedPropertyComponent","router","userService","authenticationService","dialog","route","imageService","_sanitizer","propertyId","snapshot","paramMap","createPageSubscription","dropSubscriptions","propertySub","currentUserSub","interestedUsersSub","currentUserIsInterestedSub","changePropertyStatusSub","interestSub","uninterestSub","deleteSub","getById","fetchPropertyImages","getCurrentUser","currentUser","userIsloogedIn","isUserLoggedIn","getInterestedUsersByPropertyId","interestedUsers","indexOf","interestedUsersWithoutCurrentUser","role","isCurrentUserInterested","currentUserIsInterested","getImage","imageData","bypassSecurityTrustResourceUrl","open","width","afterClosed","availability","changePropertyAvailability","onPageChange","markUninterest","markInterest","deleteProperty","response","navigate","queryParams","InterestedUsersModalComponent","ErrorComponent","errorCode","HomeComponent","queryParamsSub","params","PropertyGridComponent","sortOptions","text","Newest","HighestCapacity","LowestCapacity","HighestPrice","LowestPrice","HighestBudget","LowestBudget","pageRequest","pageNumber","pageSize","searchParamsSub","pipe","searchParams","propertiesSub","pageEvent","pageIndex","queryParamsHandling","search","pageResponse","properties","responseData","totalItems","getAll","onSortSelected","PropertyItemComponent","LoginComponent","loginForm","username","password","hasInvalidCredentials","valid","login","error","NavbarComponent","roles","currentUserSubscription","logout","language","use","NotificationsBarComponent","showNotifications","filter","elem","toggleNotifications","stopPropagation","NotificationsMenuComponent","notificationService","updateNotificationText","notificationsSub","getUnread","notifications","notification","subjectCode","translatedSubject","textCode","SearchBarComponent","showFilters","classList","contains","searchFilters","searchInput","nativeElement","filters","deleteEmptyElements","key","toggleFilters","setSearchFilters","SearchFiltersComponent","filterForm","maxCapacity","minPrice","maxPrice","formChangesSub","valueChanges","emit","NotificationsComponent","displayedColumns","dataSource","link","InterestsTableComponent","paginator","interestedPropertiesSub","getAllInterestedProperties","ProfileComponent","cdr","_snackBar","horizontalPosition","verticalPosition","deletionParamsSub","deletion","openSnackBar","duration","userId","userSub","getUserById","birthDate","Date","toLocaleDateString","PropertiesTableComponent","ownedPropertiesSub","getAllOwnedProperties","ProposalsTableComponent","proposalsSub","userRole","getAllProposalsFromUserProposals","getAllProposals","ProposalUsersTableComponent","userProposals","creatorUserProposal","proposalId","userProposalsSub","creatorSub","getAllUserProposals","getCreatorUserProposal","concat","ProposalComponent","userInfoSub","proposalSub","getGuestUserInfoByProposalId","userInfo","budget","isInvited","hasReplied","RegisterComponent","roleTranslator","signUpForm","email","repeatPassword","lastName","phoneNumber","birthdate","bio","gender","university","career","validators","checkIfMatchingPasswords","checkRequiredUniversity","checkRequiredCareer","repeatedEmail","createdUser","onPhoneChange","isGuest","Guest","setErrors","universitySub","getAllUniversities","universities","careersSub","getAllCareers","careers","phone","phoneForm","replace","actualLength","getActualLength","transformIntoHomePhone","transformIntoCellPhone","numbersInAreaCode","includeAreaCode","setValue","auxPhone","removePreviousFormats","substring","formattedPhone","generateUserFromForm","signUp","universityId","careerId","passwordKey","passwordConfirmationKey","group","passwordInput","passwordConfirmationInput","notEquivalent","universityKey","roleKey","universityInput","roleInput","invalid","careerKey","careerInput","BASE_API_URL","MetadataService","providedIn","Property","PropertyType","PrivacyLevel","Shared","Individual","Availability","Available","Rented","SortOption","User","Role","Host","Gender","Male","Female","Other","SignUpForm","UserProposal","UserProposalState","Pending","Accepted","Rejected","MaterialModule","AuthGuardService","auth","LOCAL_STORAGE_AUTH_TOKEN","AuthenticationService","currentUserSubject","localStorage","getItem","authToken","next","asObservable","post","observe","setAuthToken","headers","body","newVal","setItem","ImageService","imageId","responseType","val","reject","onloadend","onerror","NotificationService","BASE_API_URL_PROPERTY","BASE_API_URL_PROPERTY_IS_CURRENT_USER_INTERESTED","httpOptions","PropertyService","String","BASE_API_URL_PROPOSAL","BASE_API_URL_PROPOSAL_USER_INFO","ProposalService","invitedUserIds","payload","inviteeIds","TokenInterceptor","authService","request","getAuthToken","clone","setHeaders","Authorization","handle","status","BASE_API_URL_USER_PROPOSALS","BASE_API_URL_PROPOSALS","BASE_API_URL_OWNED_PROPERTIES","BASE_API_URL_INTERESTED_PROPERTIES","BASE_API_URL_IS_USER_LOGGED_IN","UserService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from \"./components/profile/profile.component\";\nimport { ProposalComponent } from \"./components/proposal/proposal.component\";\nimport { AuthGuardService } from \"./services/auth-guard.service\";\nimport  {DetailedPropertyComponent } from \"./components/detailed-property/detailed-property.component\";\nimport { NotificationsComponent } from './components/notifications/notifications.component';\nimport { CreatePropertyComponent } from './components/create-property/create-property.component';\nimport {ErrorComponent} from \"./components/error/error.component\";\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path:'login', component: LoginComponent},\n  { path:'register', component: RegisterComponent},\n  { path:'host/create', component: CreatePropertyComponent},\n  {\n    path: 'user/:id',\n    component: ProfileComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'property/:id',\n    component: DetailedPropertyComponent,\n  },\n  { path: 'proposal/:id',\n    component: ProposalComponent,\n    canActivate: [AuthGuardService],\n  },\n  { path: 'notifications',\n    component: NotificationsComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'error/:code',\n    component: ErrorComponent,\n  },\n  { path: '**', redirectTo: 'error/404' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(private translate: TranslateService){\n    translate.setDefaultLang('en');\n  }\n}\n","<link href=\"//fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n<app-navbar class=\"mat-elevation-z6\"></app-navbar>\n<div class=\"content\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { MaterialModule } from './modules/material.module';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { PropertyGridComponent } from './components/home/property-grid/property-grid.component';\nimport { PropertyItemComponent } from './components/home/property-grid/property-item/property-item.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { PropertiesTableComponent } from './components/profile/properties-table/properties-table.component';\nimport { InterestsTableComponent } from './components/profile/interests-table/interests-table.component';\nimport { ProposalsTableComponent } from './components/profile/proposals-table/proposals-table.component';\nimport { SearchFiltersComponent } from './components/navbar/search-bar/search-filters/search-filters.component';\nimport { SearchBarComponent } from './components/navbar/search-bar/search-bar.component';\nimport { ProposalComponent } from './components/proposal/proposal.component';\nimport { ProposalUsersTableComponent } from './components/proposal/proposal-users-table/proposal-users-table.component';\nimport { DetailedPropertyComponent } from './components/detailed-property/detailed-property.component';\nimport { NotificationsMenuComponent } from './components/navbar/notifications-bar/notifications-menu/notifications-menu.component';\nimport { NotificationsBarComponent } from './components/navbar/notifications-bar/notifications-bar.component';\nimport { NotificationsComponent } from './components/notifications/notifications.component';\nimport { CreatePropertyComponent } from './components/create-property/create-property.component';\nimport { InterestedUsersModalComponent } from './components/detailed-property/interested-users-modal/interested-users-modal.component';\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport { CreateProposalModalComponent } from './components/detailed-property/create-proposal-modal/create-proposal-modal.component';\nimport { TokenInterceptor } from './services/token-interceptor';\nimport { ErrorComponent } from './components/error/error.component';\n\n@NgModule({\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA],\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    LoginComponent,\n    PropertyGridComponent,\n    PropertyItemComponent,\n    RegisterComponent,\n    ProfileComponent,\n    PropertiesTableComponent,\n    InterestsTableComponent,\n    ProposalsTableComponent,\n    SearchFiltersComponent,\n    SearchBarComponent,\n    ProposalComponent,\n    ProposalUsersTableComponent,\n    DetailedPropertyComponent,\n    NotificationsMenuComponent,\n    NotificationsBarComponent,\n    NotificationsComponent,\n    InterestedUsersModalComponent,\n    CreatePropertyComponent,\n    CreateProposalModalComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MaterialModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    NgbModule,\n    MatTabsModule,\n    MatDialogModule\n  ],\n  exports: [\n    FormsModule,\n    MaterialModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n// required for AOT compilation\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PropertyType, PrivacyLevel, Property } from '../../models/property';\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Rule } from 'src/app/models/rule';\nimport { Service } from 'src/app/models/service';\nimport { Neighborhood } from 'src/app/models/neighborhood';\nimport { Image } from 'src/app/models/image';\nimport { PropertyService } from 'src/app/services/property.service';\nimport { MetadataService } from 'src/app/metadata.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-create-property',\n  templateUrl: './create-property.component.html',\n  styleUrls: ['./create-property.component.scss']\n})\nexport class CreatePropertyComponent implements OnInit {\n\n  propertyTypeOptions = [\n    PropertyType.House,\n    PropertyType.Apartment,\n    PropertyType.Loft\n  ];\n  privacyLevelOption = PrivacyLevel;\n\n  neighborhoods: Neighborhood[];\n  neighborhoodsSub: Subscription;\n  rules: Rule[] = [];\n  rulesSub: Subscription;\n  services: Service[] = [];\n  servicesSub: Subscription;\n\n  languageChangedSub: Subscription;\n\n  createPropertyForm = new FormGroup({\n    pictures: new FormControl(''),\n    \n    name: new FormControl('', [Validators.required]),\n    description: new FormControl('', [Validators.required]),\n    propertyType: new FormControl('', [Validators.required]),\n    neighborhood: new FormControl('', [Validators.required]),\n    privacy: new FormControl('', [Validators.required]),\n    capacity: new FormControl('', [Validators.pattern('[0-9]*'), Validators.required]),\n    rent: new FormControl('', [Validators.pattern('[0-9]*'), Validators.required]),\n    rules: new FormControl(this.rules),\n    services: new FormControl(this.services)\n  });\n  formChangesSub: Subscription;\n\n  createdProperty: Property;\n  publishPropertySub: Subscription;\n\n  tooManyFiles =  false;\n  notEnoughFiles =  false;\n  currentlyUploadedImages: string[] = [];\n  \n  constructor(private propertyService: PropertyService, \n              private metadataService: MetadataService, \n              private translateService: TranslateService,\n              public domSanitizer: DomSanitizer) {\n    this.createdProperty = new Property();\n    this.currentlyUploadedImages = [];\n    this.languageChangedSub = translateService.onLangChange.subscribe((newLang) => this.translateRulesAndServices());\n  }\n\n  translateRulesAndServices(){\n    this.metadataService.translateMetadataArray(this.rules);\n    this.metadataService.translateMetadataArray(this.services);\n  }\n  \n  ngOnInit(): void {\n    // this.formChangesSub = this.createPropertyForm.valueChanges.subscribe((filters) => {\n    //   // this.filters.emit(filters)\n    // });\n    this.rulesSub = this.metadataService.getAllRules().subscribe((rules) => {\n      this.rules = rules;\n      this.translateRulesAndServices();\n    });\n    this.servicesSub = this.metadataService.getAllServices().subscribe((services) => {\n      this.services = services;\n      this.translateRulesAndServices();\n    });\n    this.neighborhoodsSub = this.metadataService.getAllNeighborhoods().subscribe((neighborhoods) => this.neighborhoods = neighborhoods);\n\n  }\n\n  ngOnDestroy(){\n    if (this.publishPropertySub) { this.publishPropertySub.unsubscribe();}\n    if (this.rulesSub) { this.rulesSub.unsubscribe();}\n    if (this.servicesSub) { this.servicesSub.unsubscribe();}\n    if (this.neighborhoodsSub) { this.neighborhoodsSub.unsubscribe();}\n    // if (this.formChangesSub) { this.formChangesSub.unsubscribe();}\n  }\n\n  removeSelectedImage(i) {\n    this.currentlyUploadedImages.splice(i, 1);\n  }\n\n  detectFiles(event) {\n    let files = event.target.files;\n    if (files) {\n      if (this.currentlyUploadedImages.length + files.length > 4){\n        this.tooManyFiles = true;\n        this.notEnoughFiles = false;\n        return;\n      }\n      this.tooManyFiles = false;\n      this.notEnoughFiles = false;\n      for (let file of files) {\n          let reader = new FileReader();\n          reader.onload = (e: any) => {\n            this.currentlyUploadedImages.push(e.target.result);\n          }\n          reader.readAsDataURL(file);\n      }\n    }\n  }\n\n  publishProperty(){\n    this.generatePropertyFromForm();\n    this.publishPropertySub = this.propertyService.publishProperty(this.createdProperty).subscribe(\n      (property) => {\n        console.log(property);\n      });\n  }\n\n  removeTranslatedTextAttribute(input: Rule | Service){\n    let result = {... input};\n    delete result.translatedText;\n    return result;\n  }\n\n  generatePropertyFromForm() {\n    console.log(this.createPropertyForm.get('name'));\n    if (this.currentlyUploadedImages.length === 0){\n      this.tooManyFiles = false;\n      this.notEnoughFiles = true;\n      return;\n    }\n    this.createdProperty.images = [];\n    this.currentlyUploadedImages.forEach(\n      (image, index) => {\n        if (index === 0){\n          this.createdProperty.mainImage = <Image>{id: index, image: image.split(',')[1]};\n        }\n        this.createdProperty.images.push(<Image>{id: index, image: image.split(',')[1]});\n      }\n    );\n\n    console.log(this.createPropertyForm.controls['rules'].value);\n    console.log(this.createPropertyForm.controls['propertyType'].value);\n\n    this.createdProperty.description = this.createPropertyForm.controls['name'].value;\n    this.createdProperty.caption = this.createPropertyForm.controls['description'].value;\n    this.createdProperty.propertyType = this.createPropertyForm.controls['propertyType'].value;\n    this.createdProperty.neighbourhood = this.createPropertyForm.controls['neighborhood'].value;\n    this.createdProperty.privacyLevel = this.createPropertyForm.controls['privacy'].value;\n    this.createdProperty.capacity = this.createPropertyForm.controls['capacity'].value;\n    this.createdProperty.price = this.createPropertyForm.controls['rent'].value;\n    this.createdProperty.rules = this.createPropertyForm.controls['rules'].value;\n    this.createdProperty.services = this.createPropertyForm.controls['services'].value;\n  }\n\n}\n","  <div class=\"create-property-form\">\n  <mat-card-header>\n    <mat-card-title class=\"card-title\" translate>create-property.publish-a-property</mat-card-title>\n  </mat-card-header>\n  <form [formGroup]=\"createPropertyForm\">\n    <div class=\"column-container\">\n      <mat-card class=\"prop-info mat-elevation-z4\">\n        <h3 translate>create-property.complete-property-info</h3>\n        <mat-form-field>\n          <mat-label translate>create-property.name</mat-label>\n          <input matInput type=\"text\" formControlName=\"name\"/>\n          <mat-error><span translate>create-property.error-msg.name</span></mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"description\">\n          <mat-label translate>create-property.description</mat-label>\n          <textarea matInput type=\"text\" formControlName=\"description\"></textarea>\n          <mat-error><span translate>create-property.error-msg.description</span></mat-error>\n        </mat-form-field>\n\n        <div class=\"field-row\">\n          <mat-form-field class=\"property-type\">\n            <mat-label translate>create-property.property-type</mat-label>\n            <mat-select formControlName=\"propertyType\">\n                <mat-option [value]=\"propertyTypeOptions[0]\"><span translate>search-filters.house</span></mat-option>\n                <mat-option [value]=\"propertyTypeOptions[1]\"><span translate>search-filters.apartment</span></mat-option>\n                <mat-option [value]=\"propertyTypeOptions[2]\"><span translate>search-filters.loft</span></mat-option>\n            </mat-select>\n            <mat-error><span translate>create-property.error-msg.property-type</span></mat-error>\n          </mat-form-field>\n  \n          <mat-form-field>\n            <mat-label translate>create-property.neighborhood</mat-label>\n            <mat-select formControlName=\"neighborhood\">\n              <mat-option *ngFor=\"let neighborhood of neighborhoods\" [value]=\"neighborhood\">{{ neighborhood.name }}</mat-option>\n            </mat-select>\n            <mat-error><span translate>create-property.error-msg.neighborhood</span></mat-error>\n          </mat-form-field>\n        </div>\n        \n\n        <mat-form-field>\n          <mat-label translate>create-property.privacy</mat-label>\n          <mat-select formControlName=\"privacy\">\n              <mat-option value=\"false\"><span translate>search-filters.individual</span></mat-option>\n              <mat-option value=\"true\"><span translate>search-filters.shared</span></mat-option>\n          </mat-select>\n          <mat-error><span translate>create-property.error-msg.privacy</span></mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label translate>create-property.capacity</mat-label>\n          <input matInput type=\"text\" formControlName=\"capacity\"/>\n          <mat-error><span translate>create-property.error-msg.capacity</span></mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label translate>create-property.rent-per-month</mat-label>\n          <input matInput matInput type=\"number\" formControlName=\"rent\"/>\n          <mat-error><span translate>create-property.error-msg.rent</span></mat-error>\n        </mat-form-field>\n\n        \n        <div class=\"field-row\">\n          <mat-form-field class=\"rules\">\n              <mat-label translate>create-property.rules</mat-label>\n              <mat-select formControlName=\"rules\" multiple>\n                  <mat-option *ngFor=\"let rule of rules\" [value]=\"removeTranslatedTextAttribute(rule)\">\n                      {{rule.translatedText}}\n                  </mat-option>\n              </mat-select>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label translate>create-property.services</mat-label>\n            <mat-select formControlName=\"services\" multiple>\n                <mat-option *ngFor=\"let service of services\" [value]=\"removeTranslatedTextAttribute(service)\">\n                    {{service.translatedText}}\n                </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </mat-card>\n      <mat-card class=\"prop-pictures mat-elevation-z4\">\n        <form-field class=\"form-group\">\n          <h3 translate>create-property.upload-up-to-4-pictures</h3>\n          <!-- <app-file-uploader (fileSelected)=\"detectFiles($event)\"></app-file-uploader> -->\n          <div class=\"image-container\">\n            <div *ngFor=\"let image of currentlyUploadedImages; let i = index\" class=\"uploaded-image\">\n              <mat-icon class=\"close-button\" (click)=\"removeSelectedImage(i)\">highlight_off</mat-icon>\n              <img class=\"preview-image\" [src]=\"domSanitizer.bypassSecurityTrustUrl(image)\"/>\n            </div>\n          </div>\n          <div class=\"upload-button\">\n            <div class=\"upload-button-image\">+</div>\n            <input class=\"image-uploader\" formControlName=\"pictures\" type=\"file\" multiple accept=\"image/x-png,image/jpeg\" (change)=\"detectFiles($event)\">\n          </div>\n          <mat-error class=\"pictures-error\" *ngIf=\"notEnoughFiles\"><span translate>create-property.error-msg.notEnoughPictures</span></mat-error>\n          <mat-error class=\"pictures-error\" *ngIf=\"tooManyFiles\"><span translate>create-property.error-msg.tooManyPictures</span></mat-error>\n        </form-field>\n      </mat-card>\n    </div>\n    <button class=\"btn btn-md btn-primary text-upper\" type=\"submit\" (click)=\"publishProperty()\" translate>create-property.publish-property</button>\n  </form>\n</div>\n","import {AfterViewInit, Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport * as moment from \"moment\";\nimport {User} from \"../../../models/user\";\nimport {Property} from \"../../../models/property\";\nimport {MatSelectionList, MatSelectionListChange} from \"@angular/material/list\";\nimport {Subscription} from \"rxjs\";\nimport {ProposalService} from \"../../../services/proposal.service\";\n\nexport interface DialogData {\n  interestedUsers: User[];\n  currentUser: User;\n  property: Property;\n}\n\n@Component({\n  selector: 'app-create-proposal-modal',\n  templateUrl: './create-proposal-modal.component.html',\n  styleUrls: ['./create-proposal-modal.component.scss']\n})\nexport class CreateProposalModalComponent implements OnInit, AfterViewInit {\n  selectedOptions = [];\n  selectedOption;\n  showErrorMaxGuests: boolean;\n  @ViewChild(MatSelectionList) users: MatSelectionList;\n  createProposalSub: Subscription;\n\n  ngOnInit(): void {\n    this.showErrorMaxGuests = false;\n  }\n\n  ngAfterViewInit(): void {\n    this.users.selectionChange.subscribe((s: MatSelectionListChange) => {\n      //this.users.deselectAll();\n      if(this.users.selectedOptions.selected.length > (this.data.property.capacity - 1)) {\n        s.option.selected = false;\n        this.showErrorMaxGuests = true;\n      }\n      else {\n        this.showErrorMaxGuests = false;\n      }\n    });\n  }\n\n  constructor(public dialogRef: MatDialogRef<CreateProposalModalComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData, private proposalService: ProposalService) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onClick(): void {\n  }\n\n  createProposal() {\n    console.log(this.selectedOptions);\n    let invitedUsersIds = this.selectedOptions.map((user) => user.id);\n    console.log(invitedUsersIds);\n    this.createProposalSub = this.proposalService.createProposal(invitedUsersIds, this.data.property.id).subscribe(\n      (proposal) => {\n        console.log(proposal);\n      });\n  }\n\n  onNgModelChange($event){\n    console.log($event);\n    this.selectedOption=$event;\n  }\n\n  ageFromDateOfBirthday(dateOfBirth: any): number {\n    return moment().diff(dateOfBirth, 'years');\n  }\n\n  getPricePerPerson(numberOfPeople: number): number {\n    return this.data.property.price / numberOfPeople;\n  }\n\n}\n","<h1 mat-dialog-title translate>create-proposal-modal.create-proposal</h1>\n<div mat-dialog-content>\n  <p translate>create-proposal-modal.select-up-to<b>{{data.property.capacity - 1}}</b>create-proposal-modal.other-students</p>\n  <p translate>create-proposal-modal.warning-limit</p>\n  <div *ngIf=\"data.interestedUsers.length != 0 else noInterestedUsers\">\n  <mat-selection-list #users [(ngModel)]=\"selectedOptions\" (ngModelChange)=\"onNgModelChange($event)\">\n    <mat-list-option #user checkboxPosition=\"before\" *ngFor=\"let user of data.interestedUsers\" [value]=\"user\">\n      <div style=\"display: flex;flex-flow: row;justify-content: space-between;margin-top: 10px\" role=\"listitem\">\n        <div style=\"margin-left: 6px\">\n          {{user.name}}\n          <p style=\"margin-bottom: 8px;\"><em><small>{{user.university.name}} - {{ageFromDateOfBirthday(user.birthDate)}} - {{user.gender.toString().toLowerCase()}}</small></em></p>\n        </div>\n        <div style=\"align-self: center\">\n          <a [routerLink]=\"['/user/' + user.id]\" [mat-dialog-close]=\"true\" translate>create-proposal-modal.view-profile</a>\n        </div>\n      </div>\n    </mat-list-option>\n  </mat-selection-list>\n  <p *ngIf=\"showErrorMaxGuests\" style=\"margin-top: 16px;color: firebrick\" translate>create-proposal-modal.you-have-already-selected<b>{{users.selectedOptions.selected.length}}</b>create-proposal-modal.other-students-selected-max</p>\n  <p *ngIf=\"!showErrorMaxGuests\" style=\"margin-top: 16px\" translate>create-proposal-modal.you-have-selected<b>{{users.selectedOptions.selected.length}}</b>create-proposal-modal.other-students-selected</p>\n  <p translate>create-proposal-modal.each-student-will-be-paying<b>${{getPricePerPerson(users.selectedOptions.selected.length + 1).toFixed(2)}}</b><b translate> create-proposal-modal.month</b>.</p>\n  </div>\n  <ng-template #noInterestedUsers>\n    <p translate>\n      create-proposal-modal.no-other-students-are-interested\n    </p>\n  </ng-template>\n</div>\n<div mat-dialog-actions style=\"float: right;\">\n    <button mat-raised-button mat-dialog-close><span translate>create-proposal-modal.close</span></button>\n    <button mat-raised-button mat-dialog-close (click)=\"createProposal()\" color=\"primary\"><span translate>create-proposal-modal.create</span></button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {PropertyService} from \"../../services/property.service\";\nimport {PageEvent} from \"@angular/material/paginator\";\nimport {Subscription} from \"rxjs\";\nimport {Property} from \"../../models/property\";\nimport {User} from \"../../models/user\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {InterestedUsersModalComponent} from \"./interested-users-modal/interested-users-modal.component\";\nimport {CreateProposalModalComponent} from \"./create-proposal-modal/create-proposal-modal.component\";\nimport {UserService} from \"../../services/user.service\";\nimport {MetadataService} from \"../../metadata.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport { Router } from '@angular/router';\nimport {MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition} from \"@angular/material/snack-bar\";\nimport {ImageService} from \"../../services/image.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\n\n\n@Component({\n  selector: 'app-detailed-property',\n  templateUrl: './detailed-property.component.html',\n  styleUrls: ['./detailed-property.component.scss']\n})\nexport class DetailedPropertyComponent implements OnInit {\n\n  propertyId: number;\n  property: Property;\n  propertySub: Subscription;\n  currentUser: User;\n  currentUserSub: Subscription;\n  currentUserIsInterested: boolean;\n  currentUserIsInterestedSub: Subscription;\n  interestedUsers: User[];\n  interestedUsersWithoutCurrentUser: User[];\n  interestedUsersSub: Subscription;\n  languageChangedSub: Subscription;\n  changePropertyStatusSub: Subscription;\n  interestSub: Subscription;\n  uninterestSub: Subscription;\n  userIsloogedIn: boolean;\n  deleteSub: Subscription;\n\n  constructor( private propertyService: PropertyService,\n               private router: Router,\n               private userService: UserService,\n               private translateService: TranslateService,\n               private metadataService: MetadataService,\n               private authenticationService: AuthenticationService,\n               public dialog: MatDialog,\n               private route: ActivatedRoute,\n               private imageService: ImageService,\n               private _sanitizer: DomSanitizer) {\n    this.languageChangedSub = translateService.onLangChange.subscribe((newLang) => this.translateRulesAndServices());\n  }\n\n  ngOnInit(): void {\n    this.propertyId = +this.route.snapshot.paramMap.get(\"id\");\n    this.createPageSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.dropSubscriptions();\n  }\n\n  onPageChange() {\n    this.dropSubscriptions();\n    this.createPageSubscription();\n  }\n\n  dropSubscriptions() {\n    if (this.propertySub){ this.propertySub.unsubscribe()};\n    if (this.currentUserSub){ this.currentUserSub.unsubscribe() };\n    if (this.interestedUsersSub){ this.interestedUsersSub.unsubscribe() };\n    if (this.currentUserIsInterestedSub){ this.currentUserIsInterestedSub.unsubscribe() };\n    if (this.changePropertyStatusSub){ this.changePropertyStatusSub.unsubscribe() }\n    if (this.interestSub){ this.interestSub.unsubscribe() }\n    if (this.uninterestSub){ this.uninterestSub.unsubscribe() }\n    if (this.deleteSub){ this.deleteSub.unsubscribe() }\n  }\n\n  createPageSubscription() {\n    this.propertySub = this.propertyService.getById(this.propertyId).subscribe((property) => {\n      this.property = property;\n      this.translateRulesAndServices();\n      this.fetchPropertyImages();\n      this.currentUserSub = this.authenticationService.getCurrentUser().subscribe((currentUser)=> {\n        this.currentUser = currentUser;\n        this.userIsloogedIn = this.isUserLoggedIn();\n        this.interestedUsersSub = this.propertyService.getInterestedUsersByPropertyId(this.propertyId).subscribe((interestedUsers) => {\n        this.interestedUsers = interestedUsers;\n        var index = interestedUsers.map(function(user) { return user?.id; }).indexOf(this.currentUser?.id);\n        this.interestedUsersWithoutCurrentUser = interestedUsers;\n        });\n        if(this.currentUser?.role == 'ROLE_GUEST') {\n          this.currentUserIsInterestedSub = this.propertyService.isCurrentUserInterested(this.propertyId).subscribe((currentUserIsInterested) => {\n            console.log(currentUserIsInterested);\n            this.currentUserIsInterested = currentUserIsInterested;\n          });\n          }\n      });\n      });\n  }\n\n  fetchPropertyImages() {\n    this.property.images.forEach(\n      (image) => {\n        this.imageService.getImage(image.id).subscribe(imageData => {\n          image.image = this._sanitizer.bypassSecurityTrustResourceUrl(imageData);\n        });\n      }\n    );\n  }\n\n  isUserLoggedIn(){\n    if( this.currentUser ){\n      return true;\n    }\n    console.log(this.currentUser)\n    return false;\n  }\n\n  openDialogInterestedUsers(): void {\n    const dialogRef = this.dialog.open(InterestedUsersModalComponent, {\n      width: '400px',\n      data: {interestedUsers: this.interestedUsers}\n    });\n\n  dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  openDialogCreateProposal(): void {\n    const dialogRef = this.dialog.open(CreateProposalModalComponent, {\n      width: '500px',\n      data: {interestedUsers: this.interestedUsersWithoutCurrentUser, currentUser: this.currentUser, property: this.property}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  translateRulesAndServices(){\n    this.metadataService.translateMetadataArray(this.property.rules);\n    this.metadataService.translateMetadataArray(this.property.services);\n  }\n\n  changePropertyAvailability() {\n    console.log(this.property.availability);\n    this.changePropertyStatusSub = this.propertyService.changePropertyAvailability(this.property.id).subscribe(\n      () => {this.onPageChange();}\n    );\n  }\n\n  markUninterest() {\n    console.log(this.currentUserIsInterested);\n    this.uninterestSub = this.propertyService.markUninterest(this.property.id).subscribe(\n      () => {this.onPageChange();}\n    );\n  }\n\n  markInterest() {\n    console.log(this.currentUserIsInterested);\n    this.interestSub = this.propertyService.markInterest(this.property.id).subscribe(\n      () => {this.onPageChange();}\n    );\n  }\n\n  deleteProperty() {\n    this.deleteSub = this.propertyService.deleteProperty(this.property.id).subscribe(\n      (response) => {\n        console.log(response);\n        this.router.navigate(['/user/' + this.currentUser?.id ], { queryParams: {'deletion': \"SUCCESSFUL\"}});\n      }\n    );\n  }\n}\n","<div *ngIf=\"property\" class=\"detailed-property-container\">\n  <div class=\"detailed-property-carousel mat-elevation-z8\">\n    <ngb-carousel>\n      <ng-template *ngFor=\"let img of property.images\" ngbSlide>\n        <div>\n          <img class=\"d-block w-100 detailed-property-image\" [ngClass]=\"(property.availability == 'RENTED') ? 'grayscale' : ''\" [attr.src]=\"img.image\">\n        </div>\n      </ng-template>\n    </ngb-carousel>\n  </div>\n  <div class=\"detailed-property-cards-container\">\n    <mat-card style=\"width: 72%\" class=\"mat-elevation-z8\">\n      <mat-card-header>\n        <mat-card-title style=\"margin-bottom: 16px;\">{{property.description}}<span style=\"color: darkorange;\" translate *ngIf=\"property.availability == 'RENTED'\">detailed-property.inactive</span></mat-card-title>\n        <mat-card-subtitle translate>\n          <span *ngIf=\"property.propertyType == 'APARTMENT'\" translate>detailed-property.apartment</span>\n          <span *ngIf=\"property.propertyType == 'LOFT'\" translate>detailed-property.loft</span>\n          <span *ngIf=\"property.propertyType == 'HOUSE'\" translate>detailed-property.house</span>{{property.neighbourhood.name}}</mat-card-subtitle>\n        <mat-card-subtitle>{{property.capacity}} <span translate>detailed-property.guests</span><span translate *ngIf=\"property.privacyLevel else individual\">detailed-property.shared</span><ng-template #individual><span translate>detailed-property.individual</span></ng-template></mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-tab-group class=\"property-atributes\">\n          <mat-tab label=\"Description\"><mat-list role=\"list\">\n            <mat-list-item class=\"description-item\" role=\"listitem\">{{property.caption}}</mat-list-item>\n          </mat-list>\n          </mat-tab>\n          <mat-tab label=\"Rules\"><mat-list role=\"list\">\n            <div *ngFor=\"let rule of property.rules\">\n              <mat-list-item role=\"listitem\">{{rule.translatedText}}</mat-list-item>\n            </div>\n            <mat-list-item *ngIf=\"property.rules.length == 0\" class=\"description-item\" role=\"listitem\"><span translate>detailed-property.empty-rules</span></mat-list-item>\n          </mat-list>\n          </mat-tab>\n          <mat-tab label=\"Services\"><mat-list role=\"list\">\n            <div *ngFor=\"let service of property.services\">\n              <mat-list-item role=\"listitem\">{{service.translatedText}}</mat-list-item>\n            </div>\n            <mat-list-item *ngIf=\"property.services.length == 0\" class=\"description-item\" role=\"listitem\"><span translate>detailed-property.empty-services</span></mat-list-item>\n          </mat-list>\n          </mat-tab>\n        </mat-tab-group>\n      </mat-card-content>\n    </mat-card>\n    <mat-card style=\"width: 25%;height: fit-content;\" class=\"mat-elevation-z8\">\n      <mat-card-header>\n        <mat-card-title>\n          <span>${{property.price}} </span>\n          <span translate>detailed-property.month</span>\n        </mat-card-title>\n      </mat-card-header>\n      <mat-card-content style=\"margin-bottom: 2px\">\n        <div *ngIf=\"property.availability == 'RENTED' && currentUser?.id != property.owner.id\" translate>\n          detailed-property.property-is-inactive\n        </div>\n      </mat-card-content>\n      <mat-card-actions>\n        <div *ngIf=\"userIsloogedIn == false; else loggedIn\">\n          <button mat-raised-button style=\"width: 100%;\" [routerLink]=\"['/login/']\" color=\"primary\"><span translate>detailed-property.interested</span></button>\n        </div>\n        <ng-template #loggedIn>\n          <div *ngIf=\"currentUser?.role == 'ROLE_HOST' && currentUser?.id == property.owner.id\" translate>\n            <button mat-raised-button color=\"primary\" (click)=\"openDialogInterestedUsers()\"><span translate>detailed-property.interested-users</span></button>\n            <button *ngIf=\"property.availability == 'AVAILABLE'\" (click)=\"changePropertyAvailability()\" mat-raised-button color=\"accent\"><span translate>detailed-property.pause-property</span></button>\n            <button *ngIf=\"property.availability == 'RENTED'\" (click)=\"changePropertyAvailability()\" mat-raised-button color=\"accent\"><span translate>detailed-property.activate-property</span></button>\n            <button mat-raised-button (click)=\"deleteProperty()\" color=\"warn\"><span translate>detailed-property.delete-property</span></button>\n          </div>\n          <div *ngIf=\"currentUser?.role == 'ROLE_HOST'\">\n          </div>\n          <div *ngIf=\"currentUser?.role == 'ROLE_GUEST' && currentUserIsInterested == true\">\n            <button mat-raised-button color=\"primary\" (click)=\"openDialogCreateProposal()\"><span translate>detailed-property.create-proposal</span></button>\n            <button *ngIf=\"property.availability == 'AVAILABLE'\" (click)=\"markUninterest()\" mat-raised-button color=\"accent\"><span translate>detailed-property.not-interested</span></button>\n          </div>\n          <div *ngIf=\"currentUser?.role == 'ROLE_GUEST' && currentUserIsInterested == false\">\n            <button mat-raised-button style=\"width: 100%;\" (click)=\"markInterest()\" color=\"primary\"><span translate>detailed-property.interested</span></button>\n          </div>\n        </ng-template>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n\n\n\n","import {Component, Inject, Input, OnInit} from '@angular/core';\nimport {User} from \"../../../models/user\";\nimport * as moment from \"moment\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\nexport interface DialogData {\n  interestedUsers: User[];\n}\n\n@Component({\n  selector: 'app-interested-users-modal',\n  templateUrl: './interested-users-modal.component.html',\n  styleUrls: ['./interested-users-modal.component.scss']\n})\nexport class InterestedUsersModalComponent implements OnInit {\n\n  ngOnInit(): void {}\n\n  constructor(public dialogRef: MatDialogRef<InterestedUsersModalComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ageFromDateOfBirthday(dateOfBirth: any): number {\n    return moment().diff(dateOfBirth, 'years');\n  }\n\n}\n","<h1 mat-dialog-title translate>interested-users.interested-users</h1>\n<div mat-dialog-content>\n  <div *ngIf=\"data.interestedUsers.length != 0 else noInterestedUsers\">\n    <div *ngFor=\"let user of data.interestedUsers\">\n      <div style=\"display: flex;flex-flow: row;justify-content: space-between\" role=\"listitem\">\n        <div>\n          {{user.name}}\n          <p style=\"margin-bottom: 8px;\"><em><small>{{user.university.name}} - {{ageFromDateOfBirthday(user.birthDate)}} - {{user.gender.toString().toLowerCase()}}</small></em></p>\n        </div>\n        <div style=\"align-self: center\">\n          <a [routerLink]=\"['/user/' + user.id]\" [mat-dialog-close]=\"true\" translate>interested-users.view-profile</a>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template #noInterestedUsers>\n    <p translate>\n      create-proposal-modal.no-other-students-are-interested\n    </p>\n  </ng-template>\n</div>\n<div mat-dialog-actions style=\"float: right\">\n  <button mat-button mat-dialog-close><span translate>interested-users.close</span></button>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorCode: number;\n\n  constructor( private route: ActivatedRoute ) { }\n\n  ngOnInit(): void {\n    this.errorCode = +this.route.snapshot.paramMap.get(\"code\");\n  }\n\n}\n","<div style=\"margin-top: 30%;margin-left: 25%;margin-right: 25%\">\n  <div>\n    <h1 translate style=\"text-align: center;font-size: 32px;font-weight: 500\">error.{{errorCode}}-title</h1>\n    <h3 *ngIf=\"errorCode == 500\" translate style=\"text-align: center;\">error.{{errorCode}}-subtitle <br/> error.{{errorCode}}-subtitle2 <a href=\"mailto:hola@aluprop.com.ar\">hola@aluprop.com.ar</a> error.{{errorCode}}-subtitle3  </h3>\n    <h3 *ngIf=\"errorCode == 404\" translate style=\"text-align: center;\">error.{{errorCode}}-subtitle <a translate [routerLink]=\"''\">error.{{errorCode}}-home</a> error.{{errorCode}}-subtitle2</h3>\n    <h3 *ngIf=\"errorCode == 403\" translate style=\"text-align: center;\">error.{{errorCode}}-subtitle</h3>\n  </div>\n</div>\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  queryParamsSub: Subscription;\n  queryParams: any;\n\n  constructor(private route: ActivatedRoute) {\n    this.queryParamsSub = route.queryParams.subscribe((params) => this.queryParams = params);\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    if (this.queryParamsSub){ this.queryParamsSub.unsubscribe() };\n  }\n\n}\n","<app-property-grid></app-property-grid>","import { Component, OnInit, Input, ViewChild, OnDestroy } from '@angular/core';\nimport { PropertyService } from 'src/app/services/property.service';\nimport { Property, SortOption } from 'src/app/models/property';\nimport { PageRequest } from 'src/app/interfaces/page-request';\nimport { Subscription } from 'rxjs';\nimport { PageResponse } from 'src/app/interfaces/page-response';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { ImageService } from 'src/app/services/image.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-property-grid',\n  templateUrl: './property-grid.component.html',\n  styleUrls: ['./property-grid.component.scss']\n})\nexport class PropertyGridComponent implements OnInit, OnDestroy {\n\n  sortOptions = [\n    {\n        text: 'home.sort.newest',\n        value: SortOption.Newest\n    },\n    {\n      text: 'home.sort.capacity-highest',\n      value: SortOption.HighestCapacity\n    },\n    {\n      text: 'home.sort.capacity-lowest',\n      value: SortOption.LowestCapacity\n    },\n    {\n      text: 'home.sort.price-highest',\n      value: SortOption.HighestPrice\n    },\n    {\n      text: 'home.sort.price-lowest',\n      value: SortOption.LowestPrice\n    },\n    {\n      text: 'home.sort.budget-highest',\n      value: SortOption.HighestBudget\n    },\n    {\n      text: 'home.sort.budget-lowest',\n      value: SortOption.LowestBudget\n    }];\n\n  searchParamsSub: Subscription;\n  searchParams: any;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  totalItems: number;\n  pageSize: number;\n\n  pageRequest: PageRequest;\n  pageResponse: PageResponse<Property>;\n\n  properties: Property[];\n  propertiesSub: Subscription;\n\n  constructor(private propertyService: PropertyService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private imageService: ImageService,\n              private _sanitizer: DomSanitizer) {\n    this.pageRequest = {pageNumber: 0, pageSize: 12}\n    this.searchParamsSub = route.queryParams.pipe(\n      filter((params) => Object.keys(params).length !== 0)\n    ).subscribe((params)=>{\n      this.searchParams = params;\n      console.log('CreaingPageSubscription');\n      this.createPageSubscription();\n    });\n  }\n\n  ngOnInit(): void {\n    this.createPageSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.propertiesSub.unsubscribe();\n  }\n\n  onPageChange(pageEvent: PageEvent){\n    this.pageRequest.pageNumber = pageEvent.pageIndex;\n    this.pageRequest.pageSize = pageEvent.pageSize;\n    this.propertiesSub.unsubscribe();\n    this.createPageSubscription();\n  }\n\n  onSortSelected(event: any){\n    this.router.navigate(['/'], { queryParams: {'orderBy': event.value}, queryParamsHandling: 'merge'});\n  }\n\n  createPageSubscription(){\n    if (this.searchParams && Object.keys(this.searchParams).length !== 0){\n      this.propertiesSub = this.propertyService.search(this.pageRequest, this.searchParams).subscribe((pageResponse) => {\n        this.properties = pageResponse.responseData;\n        this.totalItems = pageResponse.totalItems;\n        this.pageSize = pageResponse.pageSize;\n        this.fetchPropertyImages();\n        // console.log(this.properties);\n      });\n    }\n    else {\n      this.propertiesSub = this.propertyService.getAll(this.pageRequest).subscribe((pageResponse) => {\n        this.properties = pageResponse.responseData;\n        this.totalItems = pageResponse.totalItems;\n        this.pageSize = pageResponse.pageSize;\n        this.fetchPropertyImages();\n        // console.log(this.properties);\n      });\n    }\n  }\n\n  fetchPropertyImages() {\n    this.properties.forEach(\n      (property) => {\n        this.imageService.getImage(property.mainImage.id).subscribe(imageData => {\n          property.mainImage.image = this._sanitizer.bypassSecurityTrustResourceUrl(imageData);\n        });\n      }\n    );\n  }\n\n}","<mat-form-field appearance=\"fill\">\n  <mat-label translate>home.sort-by</mat-label>\n  <mat-select (selectionChange)=\"onSortSelected($event)\">\n    <mat-option *ngFor=\"let option of sortOptions\" [value]=\"option.value\">\n      <span translate>{{option.text}}</span>\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n<div class=\"grid\">\n  <app-property-item *ngFor=\"let property of properties\" [property]=\"property\" [routerLink]=\"['/propiedades/']\"></app-property-item>\n</div>\n<mat-paginator [length]=\"totalItems\"\n              [pageSize]=\"pageSize\"\n              [pageSizeOptions]=\"[5, 10, 12, 25, 100]\"\n              (page)=\"onPageChange($event)\">\n</mat-paginator>\n","import { Component, OnInit, Input, } from '@angular/core';\nimport { Property } from 'src/app/models/property';\n\n@Component({\n  selector: 'app-property-item',\n  templateUrl: './property-item.component.html',\n  styleUrls: ['./property-item.component.scss']\n})\nexport class PropertyItemComponent implements OnInit {\n\n  @Input()\n  property: Property;\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}","<mat-card [routerLink]=\"['/property/' + property.id]\">\n  <img *ngIf=\"property.mainImage\" mat-card-image class=\"card-img-top\" [attr.src]=\"property.mainImage?.image \">\n  <mat-card-content class=\"card-body\" style=\"display: flex;flex-direction: column; justify-content: space-between\">\n        <span class=\"prop-title\">{{property.description}}</span>\n        <span class=\"prop-neighborhood\">{{property.neighbourhood.name}}</span>\n        <span class=\"prop-description\">{{property.caption}}</span>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button><span translate>property-card.see-more</span></button>\n    <span class=\"prop-price\">${{property.price}}</span>\n  </mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { AuthenticationService} from '../../services/authentication.service'\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router: Router, \n              private authenticationService: AuthenticationService){ }\n\n  loginForm = new FormGroup({    \n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  username = this.loginForm.get('username');\n  password = this.loginForm.get('password');\n  ngOnInit() { }\n\n  hasInvalidCredentials: boolean = false;;\n\n  login() : void {\n    if(this.username.valid && this.password.valid){\n      this.authenticationService.login(this.loginForm.value).subscribe( (response) =>{\n        if (response){\n          this.hasInvalidCredentials = false;\n          this.router.navigate([\"\"]);\n        } else {\n          this.hasInvalidCredentials = true;\n        }\n      }, (error: any) => {\n        this.hasInvalidCredentials = true;\n      });\n    }\n  }\n\n}\n","<mat-card class=\"login-card\">\n  <form [formGroup]=\"loginForm\">\n    <mat-card-header>\n      <mat-card-title class=\"login-title\" translate>log-in.login</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content class=\"form-container\">\n        <div>\n          <div>\n            <mat-form-field class=\"example-full-width\">\n              <input matInput placeholder=\"{{'log-in.username' | translate}}\" formControlName=\"username\" required>\n            </mat-form-field>\n          </div>\n        </div>\n        <div>\n          <div>\n            <mat-form-field class=\"example-full-width\">\n                <input matInput placeholder=\"{{'log-in.password' | translate}}\" type=\"password\" formControlName=\"password\" required>\n            </mat-form-field>\n          </div>\n        </div>\n      <!-- <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner> -->\n      <a routerLink=\"/register\" translate> log-in.no-account </a>\n    </mat-card-content>\n    <mat-card-content *ngIf=\"hasInvalidCredentials\" class=\"alert alert-danger error-msg\" translate> log-in.invalid-credentials</mat-card-content>\n\n    <mat-card-actions>\n      <button class=\"login-submit-btn\" mat-raised-button (click)=\"login()\" color=\"primary\"><span translate>log-in.login</span></button>\n    </mat-card-actions>\n  </form>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { User, Role } from \"../../models/user\";\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  roles = Role;\n\n  currentUserSubscription: Subscription;\n  currentUser: User;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private translateService: TranslateService) {\n  }\n\n  ngOnInit(): void {\n    this.currentUserSubscription = this.authenticationService.getCurrentUser().subscribe((currentUser)=> {\n      this.currentUser = currentUser;\n    });\n  }\n\n  ngOnDestroy(): void{\n    this.currentUserSubscription.unsubscribe()\n  }\n\n  logout(): void{\n    this.authenticationService.logout();\n  }\n\n  isUserLoggedIn(){\n    if( this.currentUser ){\n      return true;\n    }\n    console.log(this.currentUser)\n    return false;\n  }\n\n  setLanguage(language: string){\n    this.translateService.use(language);\n  }\n}\n","<mat-toolbar class=\"mat-elevation-z6 navbar-container\" color=\"primary\">\n  <mat-toolbar-row>\n    <a class=\"aluprop-logo-container\" mat-button routerLink=\"/\" aria-label=\"AluProp\">\n      <img class=\"aluprop-logo\"\n          src=\"../assets/img/logo.png\"\n          alt=\"aluprop\">\n    </a>\n    <app-search-bar></app-search-bar>\n    <div *ngIf=\"!currentUser\" class=\"login-buttons-and-flags\">\n      <a [routerLink]=\"['/register/']\" class=\"sign-up-button\" translate>navbar.signup</a>\n      <span class=\"or\" translate> navbar.or </span>\n      <a [routerLink]=\"['/login/']\" class=\"log-in-button\" translate>navbar.login</a>\n      <img class=\"flag\" src=\"../assets/img/uk.svg\" (click)=\"setLanguage('en')\">\n      <img class=\"flag\" src=\"../assets/img/spain.svg\" (click)=\"setLanguage('es')\">\n    </div>\n\n    <div *ngIf=\"currentUser\" class=\"login-buttons-and-flags\">\n      <span translate [translateParams]=\"{name: currentUser.name}\" class=\"greeting\" style=\"cursor: pointer;\" [routerLink]=\"['/user/' + currentUser.id]\">navbar.hi</span>\n      <app-notifications-bar></app-notifications-bar>\n      <a (click)=\"logout()\" class=\"log-in-button\" translate>navbar.logout</a>\n      <a  *ngIf=\"currentUser.role === roles.Host\" routerLink=\"/host/create\" class=\"log-in-button\" translate>navbar.publish-a-property</a>\n      <img class=\"flag\" src=\"../assets/img/uk.svg\" (click)=\"setLanguage('en')\">\n      <img class=\"flag\" src=\"../assets/img/spain.svg\" (click)=\"setLanguage('es')\">\n    </div>\n  </mat-toolbar-row>\n  <mat-toolbar-row class=\"navbar-show-small\">\n      <a href=\"\" mat-button class=\"navbar-show-small button\">\n        dont press\n      </a>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications-bar',\n  templateUrl: './notifications-bar.component.html',\n  styleUrls: ['./notifications-bar.component.scss']\n})\nexport class NotificationsBarComponent implements OnInit {\n\n  showNotifications = false;\n\n  @HostListener('document:click', ['$event']) \n  onDocumentClick(event) {\n    if (this.showNotifications === true && event.path.filter(\n        (elem)=> elem.id === 'toggle-notifications').length !== 1){\n      this.showNotifications = false;\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleNotifications(){\n    this.showNotifications = !this.showNotifications;\n  }\n\n}\n","<button mat-button id=\"toggle-notifications\" (click)=\"toggleNotifications()\"><mat-icon>notifications</mat-icon></button>\n<app-notifications-menu [hidden]=\"!showNotifications\" (click)=\"$event.stopPropagation()\"></app-notifications-menu>","import { Component, OnInit } from '@angular/core';\nimport { Notification } from 'src/app/models/notification';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-notifications-menu',\n  templateUrl: './notifications-menu.component.html',\n  styleUrls: ['./notifications-menu.component.scss']\n})\nexport class NotificationsMenuComponent implements OnInit {\n\n  notifications: Notification[];\n  notificationsSub: Subscription;\n\n  languageChangedSub: Subscription;\n\n  constructor(private notificationService: NotificationService,\n    private translateService: TranslateService) {\n      this.languageChangedSub = translateService.onLangChange.subscribe((newLang) => this.updateNotificationText());\n    }\n\n  ngOnInit(): void {\n    this.notificationsSub = this.notificationService.getUnread().subscribe((notifications) => {\n      this.notifications = notifications;\n      this.updateNotificationText();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.languageChangedSub){ this.languageChangedSub.unsubscribe(); }\n  }\n\n  updateNotificationText(){\n    if (!this.notifications){\n      return;\n    }\n    console.log(this.notifications);\n    this.notifications.forEach((notification) => {\n      this.translateService.get(notification.subjectCode).pipe(take(1)).subscribe((value) => {console.log(value);notification.translatedSubject = value});\n      this.translateService.get(notification.textCode + \".text\").pipe(take(1)).subscribe((value) => notification.translatedText = value);\n    })\n  }\n\n}\n","<mat-card class=\"menu\">\n  <div class=\"title\" translate>\n    notifications.new-notifications\n  </div>\n  <hr class=\"divider\">\n  <mat-list role=\"list\">\n    <mat-list-item *ngFor=\"let notification of notifications\">\n      <a href=\"{{notification.link}}\">\n        <div mat-line>{{notification.translatedSubject}}</div>\n        <div mat-line>{{notification.translatedText}}</div>\n      </a>\n    </mat-list-item>\n    <mat-list-item class=\"no-hover\" *ngIf=\"!notifications\"><span translate>notifications.no-new-notifications</span></mat-list-item>\n  </mat-list>\n  <div class=\"view-all\"  [routerLink]=\"['/notifications']\" translate>\n    notifications.view-all\n  </div>\n</mat-card>\n","import { Component, OnInit, ViewChild, ElementRef, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss']\n})\nexport class SearchBarComponent implements OnInit {\n\n  showFilters = false;\n  searchFilters: any;\n\n  @ViewChild('searchInput') searchInput: ElementRef;\n\n\n  @HostListener('document:click', ['$event']) \n  onDocumentClick(event) {\n    if (this.showFilters === true && event.path.filter(\n        (elem)=> elem.id === 'toggle-filters' || \n                            elem.id === 'filters' || \n                            elem.classList?.contains('filter-select-option')).length !== 1){\n      this.showFilters = false;\n      console.log('dsfdsf');\n    }\n  }\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.searchFilters = {};\n    // setInterval(()=>console.log(this.showFilters), 10);\n  }\n\n  toggleFilters(){\n    this.showFilters = !this.showFilters;\n  }\n\n  search(){\n    this.showFilters = false;\n    this.searchFilters.description = this.searchInput.nativeElement.value;\n    this.router.navigate(['/'], { queryParams: this.searchFilters});\n  }\n\n  setSearchFilters(filters: any){\n    this.searchFilters = this.deleteEmptyElements(filters);\n  }\n\n  deleteEmptyElements(params: any = {}) {\n    Object.keys(params).forEach(\n        (key) => {\n          if (params[key] == null || params[key] === '') {\n            delete params[key];\n            return;\n          }\n        }\n      );\n      return params;\n  }\n\n}\n","\n<mat-form-field>\n<input #searchInput matInput (keyup.enter)=\"search()\" placeholder=\"{{'navbar.search' | translate}}\">\n</mat-form-field>\n<button id=\"toggle-filters\" mat-button (click)=\"toggleFilters()\"><mat-icon>filter_list</mat-icon></button>\n<app-search-filters id=\"filters\" (filters)=\"setSearchFilters($event)\" [hidden]=\"!showFilters\" (click)=\"$event.stopPropagation();\"></app-search-filters>\n<button mat-button (click)=\"search()\"><mat-icon>search</mat-icon></button>","import { Component, OnInit, Output, OnDestroy } from '@angular/core';\nimport { PropertyType, PrivacyLevel } from '../../../../models/property';\nimport { Neighborhood } from 'src/app/models/neighborhood';\nimport { Rule } from 'src/app/models/rule';\nimport { Service } from 'src/app/models/service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-search-filters',\n  templateUrl: './search-filters.component.html',\n  styleUrls: ['./search-filters.component.scss']\n})\nexport class SearchFiltersComponent implements OnInit, OnDestroy {\n\n  propertyTypeOptions = PropertyType;\n  privacyLevelOption = PrivacyLevel;\n\n  neighborhoods: Neighborhood[];\n  rules: Rule[] = [{id: 0, name: 'Mascotas Prohibidas', properties: []}, {id: 1, name: 'Fiestas Prohibidas', properties: []}];\n  services: Service[];\n\n  filterForm = new FormGroup({\n    propertyType: new FormControl(''),\n    neighborhood: new FormControl(''),\n    privacy: new FormControl(''),\n    maxCapacity: new FormControl('', [Validators.pattern('[0-9]*')]),\n    minPrice: new FormControl('', [Validators.pattern('[0-9]*')]),\n    maxPrice: new FormControl('', [Validators.pattern('[0-9]*')]),\n    rules: new FormControl(this.rules),\n    services: new FormControl(this.services)\n  });\n  formChangesSub: Subscription;\n  \n  @Output()\n  filters = new EventEmitter();\n  \n  constructor() { }\n  \n  ngOnInit(): void {\n    this.formChangesSub = this.filterForm.valueChanges.subscribe((filters) => this.filters.emit(filters));\n  }\n\n  ngOnDestroy(){\n    this.formChangesSub.unsubscribe();\n  }\n  \n}\n","<mat-card class=\"filter-menu\">\n    <form [formGroup]=\"filterForm\">\n        <mat-form-field>\n            <mat-label translate>search-filters.property-type</mat-label>\n            <mat-select formControlName=\"propertyType\">\n                <mat-option class=\"filter-select-option\" value=\"0\"><span translate>search-filters.house</span></mat-option>\n                <mat-option class=\"filter-select-option\" value=\"1\"><span translate>search-filters.apartment</span></mat-option>\n                <mat-option class=\"filter-select-option\" value=\"2\"><span translate>search-filters.loft</span></mat-option>\n            </mat-select>\n            <mat-error>Error</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label translate>search-filters.neighborhood</mat-label>\n            <mat-select formControlName=\"neighborhood\">\n                <div *ngFor=\"let neighborhood of neighborhoods\">\n                    <mat-option class=\"filter-select-option\" value=\"neighborhood.id\">{{ neighborhood.name }}</mat-option>\n                </div>\n            </mat-select>\n            <mat-error>Error</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label translate>search-filters.privacy</mat-label>\n            <mat-select formControlName=\"privacy\">\n                <mat-option class=\"filter-select-option\" value=\"0\"><span translate>search-filters.individual</span></mat-option>\n                <mat-option class=\"filter-select-option\" value=\"1\"><span translate>search-filters.shared</span></mat-option>\n            </mat-select>\n            <mat-error>Error</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label translate>search-filters.max-capacity</mat-label>\n            <input matInput type=\"text\" formControlName=\"maxCapacity\"/>\n            <mat-error>Error</mat-error>\n        </mat-form-field>\n        <p translate>search-filters.budget</p>\n        <div class=\"form-row\">\n            <mat-form-field>\n                <mat-label translate>search-filters.min-rent</mat-label>\n                <input matInput matInput type=\"number\" formControlName=\"minPrice\"/>\n                <mat-error>Error</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label translate>search-filters.max-rent</mat-label>\n                <input matInput type=\"number\" placeholder=\"Max\" formControlName=\"maxPrice\"/>\n                <mat-error>Error</mat-error>\n            </mat-form-field>\n        </div>\n        <mat-label translate>search-filters.rules</mat-label>\n        <mat-form-field>\n            <mat-label translate>search-filters.unspecified</mat-label>\n            <mat-select formControlName=\"rules\" multiple>\n                <mat-option class=\"filter-select-option\" *ngFor=\"let rule of rules\" [value]=\"rule.id\">\n                    {{rule.name}}\n                </mat-option>\n            </mat-select>\n         </mat-form-field>\n         <mat-label translate>Services</mat-label>\n         <mat-form-field>\n            <mat-label translate>search-filters.unspecified</mat-label>\n            <mat-select formControlName=\"services\" multiple>\n                <mat-option class=\"filter-select-option\" *ngFor=\"let service of services\" [value]=\"service.id\">\n                    {{service.name}}\n                </mat-option>\n            </mat-select>\n         </mat-form-field>\n    </form>\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { Subscription } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Notification } from 'src/app/models/notification';\nimport { take } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  notifications: Notification[];\n  notificationsSub: Subscription;\n\n  languageChangedSub: Subscription;\n\n  dataSource;\n  displayedColumns: string[] = ['name'];\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(private notificationService: NotificationService,\n              private translateService: TranslateService,\n              private router: Router) {\n      this.languageChangedSub = translateService.onLangChange.subscribe((newLang) => this.updateNotificationText());\n      this.dataSource = [];\n    }\n\n  ngOnInit(): void {\n    this.notificationsSub = this.notificationService.getAll().subscribe((notifications) => {\n      this.notifications = notifications;\n      console.log(this.notifications);\n\n      this.dataSource = new MatTableDataSource<Notification>(this.notifications);\n      this.updateNotificationText();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.languageChangedSub){ this.languageChangedSub.unsubscribe(); }\n  }\n\n  updateNotificationText(){\n    if (!this.notifications){\n      return;\n    }\n    this.notifications.forEach((notification) => {\n      this.translateService.get(notification.subjectCode).pipe(take(1)).subscribe((value) => notification.translatedSubject = value);\n      this.translateService.get(notification.textCode + \".text\").pipe(take(1)).subscribe((value) => notification.translatedText = value);\n    })\n\n    this.dataSource = new MatTableDataSource<Notification>(this.notifications);\n  }\n\n  navigateTo(link: string) {\n    console.log(link);\n    this.router.navigate([link]);\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef translate>notifications.notifications</th>\n      <td mat-cell *matCellDef=\"let notification\" (click)=\"navigateTo(notification.link)\">\n        <span style=\"font-weight: 500\">{{notification.translatedSubject}}: </span>{{notification.translatedText}}\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Property} from \"../../../models/property\";\nimport {Subscription} from \"rxjs\";\nimport {UserService} from \"../../../services/user.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {PageRequest} from \"../../../interfaces/page-request\";\n\n\n@Component({\n  selector: 'app-interests-table',\n  templateUrl: './interests-table.component.html',\n  styleUrls: ['./interests-table.component.scss']\n})\nexport class InterestsTableComponent implements OnInit {\n  displayedColumns: string[] = ['name'];\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  totalItems: number;\n  pageSize: number;\n\n  pageRequest: PageRequest;\n  interestedPropertiesSub: Subscription;\n  dataSource;\n\n  constructor(private userService: UserService, private route: ActivatedRoute) {\n    this.dataSource = [];\n    this.pageRequest = {pageNumber: 0, pageSize: 10}\n  }\n\n  ngOnInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.createPageSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.interestedPropertiesSub.unsubscribe();\n  }\n\n  onPageChange(pageEvent: PageEvent){\n    this.pageRequest.pageNumber = pageEvent.pageIndex;\n    this.pageRequest.pageSize = pageEvent.pageSize;\n    this.interestedPropertiesSub.unsubscribe();\n    this.createPageSubscription();\n  }\n\n  createPageSubscription(){\n    this.interestedPropertiesSub = this.userService.getAllInterestedProperties(this.pageRequest).subscribe((pageResponse) => {\n      console.log(pageResponse);\n      this.dataSource = new MatTableDataSource<Property>(pageResponse.responseData);\n      this.totalItems = pageResponse.totalItems;\n      this.pageSize = pageResponse.pageSize;\n    });\n  }\n}\n","<div *ngIf=\"dataSource else empty\"  class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell translate *matHeaderCellDef>interests-table.interests</th>\n      <td mat-cell *matCellDef=\"let interest\">{{interest.description}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"['/property/' + row.id]\"></tr>\n  </table>\n\n  <mat-paginator [length]=\"totalItems\"\n                 [pageSize]=\"pageSize\"\n                 [pageSizeOptions]=\"[5, 10, 25, 100]\"\n                 (page)=\"onPageChange($event)\" showFirstLastButtons></mat-paginator>\n</div>\n<ng-template #empty>\n  <mat-card class=\"mat-elevation-z8\">\n    <mat-card-subtitle style=\"font-size: 12px;font-weight: 500;\" translate>interests-table.interests</mat-card-subtitle>\n    <mat-card-content>\n      <p translate>interests-table.no-interests</p>\n      <a [routerLink]=\"['/']\"><span translate>interests-table.find-a-property</span></a>\n    </mat-card-content>\n  </mat-card>\n</ng-template>\n","import {ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\nimport {PageRequest} from \"../../interfaces/page-request\";\nimport {PageResponse} from \"../../interfaces/page-response\";\nimport {Subscription} from \"rxjs\";\nimport {User} from \"../../models/user\";\nimport {UserService} from \"../../services/user.service\";\nimport {MatPaginator, PageEvent} from \"@angular/material/paginator\";\nimport {ProposalService} from \"../../services/proposal.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\nimport {filter} from \"rxjs/operators\";\nimport {MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n  providers: [MatSnackBar]\n})\nexport class ProfileComponent implements OnInit {\n  userId: number;\n  user: User;\n  userSub: Subscription;\n  currentUser: User;\n  currentUserSub: Subscription;\n  deletionParamsSub: Subscription;\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  openSnackBar() {\n    this._snackBar.open('You have successfully deleted your property', 'Dismiss', {\n      duration: 2000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n\n  constructor( private cdr: ChangeDetectorRef, private _snackBar: MatSnackBar,private userService: UserService, private route: ActivatedRoute, private authenticationService: AuthenticationService) {\n    this.deletionParamsSub = route.queryParams.pipe(\n      filter((params) => Object.keys(params).length !== 0)\n    ).subscribe((params)=>{\n      if(params.deletion == 'SUCCESSFUL')\n        this.openSnackBar();\n      this.createPageSubscription();\n    });\n  }\n\n  ngOnInit(): void {\n    this.userId = +this.route.snapshot.paramMap.get(\"id\");\n    this.createPageSubscription();\n  }\n\n  ngOnDestroy(): void {\n    if (this.userSub){ this.userSub.unsubscribe()}\n    if (this.currentUserSub){ this.currentUserSub.unsubscribe()}\n    if (this.deletionParamsSub) { this.deletionParamsSub.unsubscribe()}\n  }\n\n  onPageChange(){\n    if (this.userSub){ this.userSub.unsubscribe()};\n    if (this.currentUserSub){ this.currentUserSub.unsubscribe()};\n    this.createPageSubscription();\n  }\n\n  createPageSubscription(){\n    this.userSub = this.userService.getUserById(this.userId).subscribe((user) => {\n      this.user = user;\n      console.log(this.user);\n      this.currentUserSub = this.authenticationService.getCurrentUser().subscribe((currentUser)=> {\n        this.currentUser = currentUser;\n      });\n    });\n  }\n\n  date(birthDate: Date) {\n    return new Date(birthDate).toLocaleDateString();\n  }\n}\n","<div *ngIf=\"user\" class=\"user-info mat-elevation-z6\">\n        <div>\n          <h1 class=\"user-title\">{{ user.name }} {{ user.lastName }}</h1>\n        </div>\n        <div class=\"user-description\">\n          <div *ngIf=\"user.role == 'ROLE_GUEST'\"><p class=\"user-details\"><mat-icon class=\"icon\">school</mat-icon>{{ user.university.name }}</p></div>\n          <p class=\"user-details\"><mat-icon class=\"icon\">cake</mat-icon>{{ date(user.birthDate) }}</p>\n        </div>\n</div>\n<div *ngIf=\"user\" class=\"user-bio\">\n  <mat-card class=\"user-bio-card mat-elevation-z8\">\n    <mat-card-subtitle translate>profile.bio</mat-card-subtitle>\n    <mat-card-content>\n      <p>{{ user.bio }}</p>\n    </mat-card-content>\n  </mat-card>\n</div>\n<!--<div *ngIf=\"checkParams()\">-->\n<!--</div>-->\n<!-- <div *ngIf=\"deletionParams?.deletion == 'SUCCESSFUL'\" style=\"color:green;text-align: center;font-size: 26px\" >Successful delete!</div> -->\n<!--<ng-template #spinner><mat-spinner style=\"position: relative; margin-top:30%; margin-left: 50%; margin-right: 50%;\"></mat-spinner></ng-template>-->\n<div *ngIf=\"user?.id == currentUser?.id && user?.role == 'ROLE_GUEST'\" class=\"user-properties\">\n    <app-interests-table id=\"left-table\"></app-interests-table>\n    <app-proposals-table id=\"right-table\" [userRole]=\"user?.role\"></app-proposals-table>\n</div>\n<div *ngIf=\"user?.id == currentUser?.id && user?.role == 'ROLE_HOST'\" class=\"user-properties\">\n  <app-properties-table id=\"left-table\"></app-properties-table>\n  <app-proposals-table id=\"right-table\" [userRole]=\"user?.role\"></app-proposals-table>\n</div>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Property} from \"../../../models/property\";\nimport {Subscription} from \"rxjs\";\nimport {UserService} from \"../../../services/user.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {UserProposal} from \"../../../models/userProposal\";\nimport {Proposal} from \"../../../models/proposal\";\nimport {PageRequest} from \"../../../interfaces/page-request\";\n\n@Component({\n  selector: 'app-properties-table',\n  templateUrl: './properties-table.component.html',\n  styleUrls: ['./properties-table.component.scss']\n})\nexport class PropertiesTableComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'state'];\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  totalItems: number;\n  pageSize: number;\n\n  pageRequest: PageRequest;\n\n  ownedPropertiesSub: Subscription;\n  dataSource;\n\n  constructor(private userService: UserService, private route: ActivatedRoute) {\n    this.dataSource = [];\n    this.pageRequest = {pageNumber: 0, pageSize: 10}\n  }\n\n  ngOnInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.createPageSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.ownedPropertiesSub.unsubscribe();\n  }\n\n  onPageChange(pageEvent: PageEvent){\n    this.pageRequest.pageNumber = pageEvent.pageIndex;\n    this.pageRequest.pageSize = pageEvent.pageSize;\n    this.ownedPropertiesSub.unsubscribe();\n    this.createPageSubscription();\n  }\n\n  createPageSubscription(){\n    this.ownedPropertiesSub = this.userService.getAllOwnedProperties(this.pageRequest).subscribe((pageResponse) => {\n      console.log(pageResponse);\n      this.dataSource = new MatTableDataSource<Property>(pageResponse.responseData);\n      this.totalItems = pageResponse.totalItems;\n      this.pageSize = pageResponse.pageSize;\n    });\n  }\n}\n","<div *ngIf=\"dataSource else empty\" class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell translate *matHeaderCellDef>properties-table.properties</th>\n      <td mat-cell *matCellDef=\"let property\">{{property.description}}</td>\n    </ng-container>\n\n    <!-- State Column -->\n    <ng-container matColumnDef=\"state\">\n      <th mat-header-cell translate class=\"state\" *matHeaderCellDef>properties-table.state</th>\n      <td mat-cell class=\"state\" *matCellDef=\"let property\">\n        <div *ngIf=\"property.availability == 'AVAILABLE'; else unavailable\">\n          <span translate style=\"color: green;\">properties-table.active</span>\n        </div>\n        <ng-template #unavailable>\n          <span translate style=\"color: firebrick;\">properties-table.inactive</span>\n        </ng-template>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"['/property/' + row.id]\"></tr>\n  </table>\n\n  <mat-paginator [length]=\"totalItems\"\n                 [pageSize]=\"pageSize\"\n                 [pageSizeOptions]=\"[5, 10, 25, 100]\"\n                 (page)=\"onPageChange($event)\" showFirstLastButtons></mat-paginator>\n</div>\n<ng-template #empty>\n  <mat-card class=\"mat-elevation-z8\">\n    <mat-card-subtitle style=\"font-size: 12px;font-weight: 500;\" translate>properties-table.properties</mat-card-subtitle>\n    <mat-card-content>\n      <p translate>properties-table.no-properties</p>\n      <a [routerLink]=\"['/host/create']\"><span translate>properties-table.publish-a-property</span></a>\n    </mat-card-content>\n  </mat-card>\n</ng-template>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Proposal} from \"../../../models/proposal\";\nimport {UserProposal} from \"../../../models/userProposal\";\nimport {Subscription} from \"rxjs\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {UserService} from \"../../../services/user.service\";\nimport {PageRequest} from \"../../../interfaces/page-request\";\nimport {Property} from \"../../../models/property\";\n\n\n@Component({\n  selector: 'app-proposals-table',\n  templateUrl: './proposals-table.component.html',\n  styleUrls: ['./proposals-table.component.scss']\n})\nexport class ProposalsTableComponent implements OnInit {\n  displayedColumns: string[] = ['name','ownership'];\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  totalItems: number;\n  pageSize: number;\n\n  pageRequest: PageRequest;\n\n  @Input() userRole: string;\n\n  userId: number;\n  proposalsSub: Subscription;\n  dataSource;\n\n  constructor(private userService: UserService, private route: ActivatedRoute) {\n    this.dataSource = [];\n    this.pageRequest = {pageNumber: 0, pageSize: 10}\n  }\n\n  ngOnInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.userId = +this.route.snapshot.paramMap.get(\"id\");\n    this.createPageSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.proposalsSub.unsubscribe();\n  }\n\n  onPageChange(pageEvent: PageEvent){\n    this.pageRequest.pageNumber = pageEvent.pageIndex;\n    this.pageRequest.pageSize = pageEvent.pageSize;\n    this.proposalsSub.unsubscribe();\n    this.createPageSubscription();\n  }\n\n  createPageSubscription(){\n    if(this.userRole == \"ROLE_GUEST\") {\n      console.log(this.pageRequest);\n      this.proposalsSub = this.userService.getAllProposalsFromUserProposals(this.pageRequest).subscribe((pageResponse) => {\n        console.log(pageResponse);\n        this.dataSource = new MatTableDataSource<Proposal>(pageResponse.responseData);\n        this.totalItems = pageResponse.totalItems;\n        this.pageSize = pageResponse.pageSize;\n      });\n    }\n    else {\n      console.log(this.pageRequest);\n      this.proposalsSub = this.userService.getAllProposals(this.pageRequest).subscribe((pageResponse) => {\n        console.log(pageResponse);\n        this.dataSource = new MatTableDataSource<Proposal>(pageResponse.responseData);\n        this.totalItems = pageResponse.totalItems;\n        this.pageSize = pageResponse.pageSize;\n      });\n    }\n  }\n}\n","<div *ngIf=\"dataSource else empty\" class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n    <div *ngIf=\"userRole == 'ROLE_GUEST'; else host\">\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell translate *matHeaderCellDef>proposals-table.proposals</th>\n        <td mat-cell *matCellDef=\"let proposal\">{{proposal?.property.description}}</td>\n      </ng-container>\n\n      <!-- Ownership Column -->\n      <ng-container matColumnDef=\"ownership\">\n        <th mat-header-cell translate class=\"state\" *matHeaderCellDef>proposals-table.creator</th>\n        <td mat-cell class=\"state\" *matCellDef=\"let proposal\">\n          <div *ngIf=\"proposal?.creator.id == userId\"><span style=\"color: gold;\"><mat-icon class=\"state-icon\">star_outline</mat-icon></span></div>\n        </td>\n      </ng-container>\n    </div>\n\n    <ng-template #host>\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell translate *matHeaderCellDef>proposals-table.proposals</th>\n        <td mat-cell *matCellDef=\"let proposal\">\n          <div style=\"display: flex;flex-flow: row\">\n            <div>{{proposal?.property.description}}</div>\n            <div style=\"padding-left: 4px; color:dimgrey;font-style: italic\" *ngFor=\"let userProposal of proposal.userProposals\">| {{userProposal.user.name}}</div>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- State Column -->\n      <ng-container matColumnDef=\"ownership\">\n        <th mat-header-cell translate class=\"state\" *matHeaderCellDef>proposals-table.state</th>\n        <td mat-cell class=\"state\" *matCellDef=\"let proposal\">\n          <div *ngIf=\"proposal?.state == 'SENT'\">\n            <span style=\"color: darkorange;\"><mat-icon>schedule</mat-icon></span>\n          </div>\n          <div *ngIf=\"proposal?.state == 'ACCEPTED'\">\n            <span style=\"color: green;\"><mat-icon>check</mat-icon></span>\n          </div>\n          <div *ngIf=\"proposal?.state == 'DECLINED'\">\n            <span style=\"color: firebrick;\"><mat-icon>clear</mat-icon></span>\n          </div>\n          <div *ngIf=\"proposal?.state == 'DROPPED'\">\n            <span style=\"color: dimgrey;\"><mat-icon>block</mat-icon></span>\n          </div>\n  <!--        This states we no longer use-->\n  <!--        <div *ngIf=\"proposal.state == 'CANCELLED'\">-->\n  <!--          <span style=\"color: dimgrey;\"><mat-icon>block</mat-icon></span>-->\n  <!--        </div>-->\n  <!--        <div *ngIf=\"proposal.state == 'PENDING'\">-->\n  <!--          <span style=\"color: dimgrey;\"><mat-icon>block</mat-icon></span>-->\n  <!--        </div>-->\n        </td>\n      </ng-container>\n    </ng-template>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"['/proposal/' + row.id]\" class=\"row-hover\"></tr>\n  </table>\n\n  <mat-paginator [length]=\"totalItems\"\n                 [pageSize]=\"pageSize\"\n                 [pageSizeOptions]=\"[5, 10, 25, 100]\"\n                 (page)=\"onPageChange($event)\" showFirstLastButtons></mat-paginator>\n</div>\n<ng-template #empty>\n  <mat-card class=\"mat-elevation-z8\">\n    <mat-card-subtitle style=\"font-size: 12px;font-weight: 500;\" translate>proposals-table.proposals</mat-card-subtitle>\n    <mat-card-content>\n      <p *ngIf=\"userRole == 'ROLE_GUEST'\" translate>proposals-table.no-proposals-guest</p>\n      <p *ngIf=\"userRole == 'ROLE_HOST'\" translate>proposals-table.no-proposals-host</p>\n    </mat-card-content>\n  </mat-card>\n</ng-template>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Proposal, ProposalState} from \"../../../models/proposal\";\nimport {UserProposal} from \"../../../models/userProposal\";\nimport {ProposalService} from \"../../../services/proposal.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {User} from \"../../../models/user\";\nimport * as moment from 'moment';\nimport {take} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-proposal-users-table',\n  templateUrl: './proposal-users-table.component.html',\n  styleUrls: ['./proposal-users-table.component.scss']\n})\nexport class ProposalUsersTableComponent implements OnInit {\n\n  displayedColumns: string[] = ['user','information', 'response'];\n\n  @Input() proposalState: ProposalState;\n  @Input() proposalCreator: User;\n\n  dataSource;\n  userProposals: UserProposal[];\n  userProposalsSub: Subscription;\n  creator: User;\n  creatorSub: Subscription;\n  creatorUserProposal: UserProposal;\n  proposalId: number;\n\n\n  constructor(private proposalService: ProposalService, private route: ActivatedRoute) {\n    this.userProposals = [];\n    this.creatorUserProposal = new UserProposal();\n    this.dataSource = [];\n  }\n\n  ngOnInit(): void {\n    this.proposalId = +this.route.snapshot.paramMap.get(\"id\");\n    this.createPageSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.userProposalsSub.unsubscribe();\n    this.creatorSub.unsubscribe();\n  }\n\n  onPageChange(pageEvent: PageEvent){\n    this.userProposalsSub.unsubscribe();\n    this.creatorSub.unsubscribe();\n    this.createPageSubscription();\n  }\n\n  createPageSubscription(){\n    this.userProposalsSub = this.proposalService.getAllUserProposals(this.proposalId).subscribe((userProposals) => {\n      console.log(userProposals);\n      this.userProposals = userProposals;\n      this.creatorSub = this.proposalService.getCreatorUserProposal(this.proposalId).subscribe((creatorUserProposal) => {\n        console.log(creatorUserProposal);\n        this.creatorUserProposal= creatorUserProposal;\n        this.dataSource = new MatTableDataSource<UserProposal>([this.creatorUserProposal].concat(this.userProposals));\n        console.log(this.dataSource);\n      });\n    });\n  }\n\n  ageFromDateOfBirthday(dateOfBirth: any): number {\n    return moment().diff(dateOfBirth, 'years');\n  }\n\n}\n","<div *ngIf=\"dataSource\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- User Column -->\n    <ng-container matColumnDef=\"user\">\n      <th mat-header-cell translate *matHeaderCellDef>proposals-user-table.user</th>\n      <td mat-cell *matCellDef=\"let userProposal\">{{userProposal?.user.name}}</td>\n    </ng-container>\n\n    <!-- Information Column -->\n    <ng-container matColumnDef=\"information\">\n      <th mat-header-cell translate style=\"text-align: center\" *matHeaderCellDef>proposals-user-table.information</th>\n      <td mat-cell style=\"text-align: center\" *matCellDef=\"let userProposal\">\n        <div *ngIf=\"proposalState == 'ACCEPTED'; else elseBlock1\">{{userProposal?.user.university.name}} - {{ ageFromDateOfBirthday(userProposal?.user.birthDate) }} - <span translate>proposals-user-table.gender-{{userProposal?.user.gender.toString()}}</span> | {{userProposal?.user.email}} - {{userProposal?.user.phoneNumber}}</div>\n        <ng-template #elseBlock1>{{userProposal?.user.university.name}} - {{ ageFromDateOfBirthday(userProposal?.user.birthDate) }} - <span translate>proposals-user-table.gender-{{userProposal?.user.gender.toString()}}</span></ng-template>\n      </td>\n    </ng-container>\n\n    <!-- Response state Column -->\n    <ng-container matColumnDef=\"response\">\n      <th mat-header-cell translate class=\"state\" *matHeaderCellDef>proposals-user-table.response</th>\n      <td mat-cell class=\"state\" *matCellDef=\"let userProposal\">\n        <div *ngIf=\"userProposal?.user.id == proposalCreator?.id; else elseBlock2\">\n          <span style=\"color: gold;\"><mat-icon class=\"state-icon\">star_outline</mat-icon></span>\n        </div>\n        <ng-template #elseBlock2>\n          <div *ngIf=\"userProposal?.state == 'PENDING'\">\n            <span style=\"color: darkorange;\"><mat-icon class=\"state-icon\">schedule</mat-icon></span>\n          </div>\n          <div *ngIf=\"userProposal?.state == 'ACCEPTED'\">\n            <span style=\"color: green;\"><mat-icon class=\"state-icon\">check</mat-icon></span>\n          </div>\n          <div *ngIf=\"userProposal?.state == 'REJECTED'\">\n            <span style=\"color: firebrick;\"><mat-icon class=\"state-icon\">clear</mat-icon></span>\n          </div>\n        </ng-template>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"['/user/' + row.user.id]\"></tr>\n\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ProposalService} from \"../../services/proposal.service\";\nimport {PageEvent} from \"@angular/material/paginator\";\nimport {Subscription} from \"rxjs\";\nimport {Proposal} from \"../../models/proposal\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {UserProposal} from \"../../models/userProposal\";\nimport {User} from \"../../models/user\";\nimport {UserService} from \"../../services/user.service\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\n\n@Component({\n  selector: 'app-proposal',\n  templateUrl: './proposal.component.html',\n  styleUrls: ['./proposal.component.scss']\n})\nexport class ProposalComponent implements OnInit {\n  proposalId: number;\n  proposal: Proposal;\n  proposalSub: Subscription;\n  currentUser: User;\n  currentUserSub: Subscription;\n  budget: number;\n  isInvited: boolean;\n  hasReplied: boolean;\n  userInfoSub: Subscription;\n\n  constructor(private authenticationService: AuthenticationService, private proposalService: ProposalService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.proposalId = +this.route.snapshot.paramMap.get(\"id\");\n    this.createPageSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.userInfoSub?.unsubscribe();\n    this.proposalSub?.unsubscribe();\n    this.currentUserSub?.unsubscribe();\n  }\n\n  onPageChange(pageEvent: PageEvent) {\n    this.userInfoSub?.unsubscribe();\n    this.proposalSub?.unsubscribe();\n    this.currentUserSub?.unsubscribe();\n    this.createPageSubscription();\n  }\n\n  createPageSubscription() {\n    this.proposalSub = this.proposalService.getById(this.proposalId).subscribe((proposal) => {\n      console.log(this.proposalId);\n      console.log(proposal);\n      this.proposal = proposal;\n      this.currentUserSub = this.authenticationService.getCurrentUser().subscribe((currentUser)=> {\n        console.log(currentUser);\n        this.currentUser = currentUser;\n        if(this.currentUser.role == 'ROLE_GUEST') {\n          this.userInfoSub = this.proposalService.getGuestUserInfoByProposalId(this.proposalId).subscribe((userInfo) => {\n            this.budget = userInfo.budget;\n            console.log(userInfo.isInvited);\n            this.isInvited = userInfo.isInvited;\n            this.hasReplied = userInfo.hasReplied;\n            console.log(userInfo);\n            console.log(this.isInvited);\n            console.log(this.hasReplied);\n            console.log(this.budget);\n          });\n        }\n      });\n    });\n  }\n\n}\n","<div *ngIf=\"proposal && currentUser\" class=\"proposal-container\">\n  <mat-card class=\"proposal-card mat-elevation-z8\">\n    <img style=\"object-fit: cover;height: 25rem\" [ngClass]=\"(proposal.state == 'DECLINED' || proposal.state == 'CANCELED' || proposal.state == 'DROPPED') ? 'grayscale' : ''\" src=\"http://lisagryba.com/wp-content/uploads/2015/04/nice-houses-for-sale.jpg\" mat-card-image alt=\"\">\n    <mat-card-header>\n      <mat-card-subtitle translate>proposal.proposal</mat-card-subtitle>\n      <mat-card-title><a [routerLink]=\"['/property/' + proposal.property.id]\">{{ proposal.property.description }}</a></mat-card-title>\n    </mat-card-header>\n    <mat-card-content style=\"margin: 0 16px;\">\n      <div>\n        <p>{{ proposal.property.caption }}</p>\n      </div>\n      <div>\n        <app-proposal-users-table [proposalCreator]=\"proposal.creator\" [proposalState]=\"proposal.state\"></app-proposal-users-table>\n      </div>\n    </mat-card-content>\n    <mat-card-content style=\"margin-top: 16px; text-align: center\">\n          <div *ngIf=\"proposal.state == 'DROPPED'\">\n             <div translate *ngIf=\"currentUser.role == 'ROLE_HOST'\">\n               proposal.declined-host\n             </div>\n           <div *ngIf=\"currentUser.role == 'ROLE_GUEST'\">\n             <span translate>proposal.dropped</span>\n             <a [routerLink]=\"''\" translate>proposal.find-another-property</a>\n           </div>\n          </div>\n          <div *ngIf=\"proposal.state == 'CANCELED'\">\n             <span translate>proposal.canceled</span><br/>\n             <a [routerLink]=\"''\" translate>proposal.find-another-property</a>\n          </div>\n          <div *ngIf=\"proposal.state == 'DECLINED'\">\n             <span translate>proposal.declined</span><br/>\n             <a [routerLink]=\"''\" translate>proposal.find-another-property</a>\n          </div>\n          <div *ngIf=\"proposal.state == 'ACCEPTED'\">\n             <div translate *ngIf=\"currentUser.role == 'ROLE_HOST'\">\n               proposal.accepted-host\n             </div>\n             <div *ngIf=\"currentUser.role == 'ROLE_GUEST'\">\n               <span translate>proposal.accepted</span><br/>\n               <span><span translate>proposal.host-info</span> {{proposal.property.owner.name}} | {{proposal.property.owner.email}} | {{proposal.property.owner.phoneNumber}}</span>\n             </div>\n          </div>\n          <div translate *ngIf=\"proposal.state == 'SENT' && currentUser.role == 'ROLE_GUEST'\">\n            proposal.sent\n          </div>\n          <div *ngIf=\"proposal.state == 'SENT' && currentUser.role == 'ROLE_HOST'\">\n            <div  *ngIf=\"proposal.property.availability == 'RENTED' else active\">\n              <div translate>proposal.rented-host</div>\n              <button disabled mat-button><span translate>proposal.decline</span></button>\n              <button disabled mat-button><span translate>proposal.accept</span></button>\n            </div>\n            <ng-template #active>\n              <div>\n                <div translate>proposal.your-property</div>\n                <button mat-button><span translate>proposal.decline</span></button>\n                <button mat-button><span translate>proposal.accept</span></button>\n              </div>\n            </ng-template>\n          </div>\n          <div *ngIf=\"proposal.state == 'PENDING' && currentUser.id == proposal.creator.id\">\n            <button mat-button>proposal.cancel</button>\n          </div>\n          <div *ngIf=\"proposal.state == 'PENDING' && isInvited == true && hasReplied == false\">\n            <div><span translate>proposal.you-would-pay</span> <b> ${{budget}} </b> <span translate>proposal.per-month</span></div>\n            <mat-card-actions>\n             <button mat-button><span translate>proposal.decline</span></button>\n             <button mat-button><span translate>proposal.accept</span></button>\n            </mat-card-actions>\n          </div>\n          <div *ngIf=\"proposal.state == 'PENDING' && isInvited == true && hasReplied == true\">\n            <span translate>proposal.already-replied</span>\n          </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { AuthenticationService} from '../../services/authentication.service'\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport {User, SignUpForm, Role} from \"../../models/user\";\nimport { MetadataService } from 'src/app/metadata.service';\nimport { University } from 'src/app/models/university';\nimport { Career } from 'src/app/models/career';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  roleTranslator = {\n    \"ROLE_GUEST\": \"0\",\n    \"ROLE_HOST\": \"1\",\n  };\n\n  signUpForm = new FormGroup({    \n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n    repeatPassword: new FormControl('', [Validators.required]),\n    name: new FormControl('', [Validators.required]),\n    lastName: new FormControl('', [Validators.required]),\n    phoneNumber: new FormControl('', [Validators.required]),\n    birthdate: new FormControl('', [Validators.required]),\n    role: new FormControl('', [Validators.required]),\n    bio: new FormControl('', [Validators.required]),\n    gender: new FormControl('', [Validators.required]),\n    university: new FormControl(''),\n    career: new FormControl('')\n  },\n    {\n      validators: \n      [\n        this.checkIfMatchingPasswords('password', 'repeatPassword'),\n        this.checkRequiredUniversity('university', 'role'),\n        this.checkRequiredCareer('career', 'role')\n      ]\n    }\n  );\n  formChangesSub: Subscription;\n\n  passwordMismatch: boolean;\n  universitySub: Subscription;\n  careersSub: Subscription;\n  universities: University[];\n  careers: Career[];\n  createdUser: SignUpForm;\n  isGuest: boolean;\n  repeatedEmail = false;\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private router: Router,\n    private metadataService: MetadataService\n  ) { \n    this.createdUser = new SignUpForm();\n    this.formChangesSub = this.signUpForm.valueChanges.subscribe((filters) => {\n      this.onPhoneChange(filters['phoneNumber']);\n      this.isGuest = filters[\"role\"] === Role.Guest;\n      \n      this.repeatedEmail = this.createdUser.email && this.createdUser.email === filters['email']\n      if (this.repeatedEmail)\n        this.signUpForm.controls[\"email\"].setErrors({'invalid': true});\n    });\n  }\n  username: string;\n  password: string;\n  ngOnInit(): void {\n    this.universitySub = this.metadataService.getAllUniversities().subscribe((universities) => {\n      this.universities = universities;\n    })\n    this.careersSub = this.metadataService.getAllCareers().subscribe((careers) => {\n      this.careers = careers;\n    })\n  }\n\n  ngOnDestroy() {\n    if (this.formChangesSub) { this.formChangesSub.unsubscribe()}\n    if (this.universitySub) { this.universitySub.unsubscribe()}\n    if (this.careersSub) { this.careersSub.unsubscribe()}\n  }\n\n  onPhoneChange(phone: string) {\n    let phoneForm = phone || '';\n\n    // Only allow characters that have sense in a phone number\n    phoneForm = phoneForm.replace(/[^0-9()+-]/gi, '');\n\n    const actualLength = this.getActualLength(phoneForm);\n    if (actualLength === 5) {\n      phoneForm = this.transformIntoHomePhone(phoneForm);\n    }\n    if (actualLength === 9 || actualLength === 10) {\n      phoneForm = this.transformIntoCellPhone(phoneForm);\n    }\n    if (actualLength >= 11) {\n      const numbersInAreaCode = actualLength - 10;\n      phoneForm = this.includeAreaCode(phoneForm, numbersInAreaCode);\n    }\n\n    if (this.signUpForm.get('phoneNumber').value !== phoneForm){\n      this.signUpForm.get('phoneNumber').setValue(phoneForm);\n    }\n  }\n\n  removePreviousFormats(phone: string): string {\n    return phone.replace(/[- ()]/g, '');\n  }\n  transformIntoHomePhone(phone: string): string {\n    const auxPhone = this.removePreviousFormats(phone);\n\n    return auxPhone.substring(0, 4) + '-' + auxPhone.substring(4);\n  }\n\n  transformIntoCellPhone(phone: string): string {\n    const auxPhone = this.removePreviousFormats(phone);\n\n    return auxPhone.substring(0, 2) + ' ' + auxPhone.substring(2, 6) + '-' + auxPhone.substring(6);\n  }\n\n  includeAreaCode(phone: string, numbersInAreaCode: number): string {\n    const auxPhone = this.removePreviousFormats(phone);\n\n    return '(' + auxPhone.substring(0, numbersInAreaCode) + ') '\n      + auxPhone.substring(numbersInAreaCode, numbersInAreaCode + 2) + ' '\n      + auxPhone.substring(numbersInAreaCode + 2, numbersInAreaCode + 6) + '-'\n      + auxPhone.substring(numbersInAreaCode + 6);\n  }\n\n  getActualLength(formattedPhone: string): number {\n    return this.removePreviousFormats(formattedPhone).length;\n  }\n\n  signUp() {\n    if(this.signUpForm.valid){\n      this.generateUserFromForm();\n      this.authenticationService.signUp(this.createdUser).subscribe((response) =>{\n        this.repeatedEmail = false;\n        if (response){\n          this.router.navigate([\"\"]);\n        } else {\n        }\n      }, (error: any) => {\n        this.repeatedEmail = true;\n        this.signUpForm.controls[\"email\"].setErrors({'invalid': true});\n      });\n    }\n  }\n\n  generateUserFromForm(): void {\n    console.log(this.signUpForm);\n    this.createdUser.email = this.signUpForm.get(\"email\").value;\n    this.createdUser.name = this.signUpForm.get(\"name\").value;\n    this.createdUser.lastName = this.signUpForm.get(\"lastName\").value;\n    this.createdUser.password = this.signUpForm.get(\"password\").value;\n    this.createdUser.birthDate = this.signUpForm.value[\"birthdate\"]\n    this.createdUser.gender = this.signUpForm.value[\"gender\"]\n    this.createdUser.bio = this.signUpForm.value[\"bio\"];\n    this.createdUser.phoneNumber = this.signUpForm.value[\"phoneNumber\"];\n    console.log(this.createdUser.role);\n    if(this.signUpForm.value[\"role\"] == Role.Guest) {\n      this.createdUser.universityId = this.signUpForm.value[\"university\"].id;\n      this.createdUser.careerId = this.signUpForm.value[\"career\"].id;\n    }\n    this.createdUser.role = this.roleTranslator[this.signUpForm.value[\"role\"]];\n\n  }\n\n\n  private checkIfMatchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n      const passwordInput = group.controls[passwordKey],\n        passwordConfirmationInput = group.controls[passwordConfirmationKey];\n      if (passwordInput.value !== passwordConfirmationInput.value) {\n        passwordConfirmationInput.setErrors({notEquivalent: true});\n        return {notEquivalent: true};\n      } else {\n        passwordConfirmationInput.setErrors(null);\n      }\n    };\n  }\n\n  private checkRequiredUniversity(universityKey: string, roleKey: string) {\n    return (group: FormGroup) => {\n      const universityInput = group.controls[universityKey],\n        roleInput = group.controls[roleKey];\n      if (roleInput.value === Role.Guest && !universityInput.value) {\n        universityInput.setErrors({invalid: true});\n        return {invalid: true};\n      } else {\n        universityInput.setErrors(null);\n      }\n    };\n  }\n\n  private checkRequiredCareer(careerKey: string, roleKey: string) {\n    return (group: FormGroup) => {\n      const careerInput = group.controls[careerKey],\n        roleInput = group.controls[roleKey];\n      if (roleInput.value === Role.Guest && !careerInput.value) {\n        careerInput.setErrors({invalid: true});\n        return {invalid: true};\n      } else {\n        careerInput.setErrors(null);\n      }\n    };\n  }\n\n}\n","  <div class=\"register-page\">\n    <mat-card-header>\n      <mat-card-title class=\"card-title title\" translate>sign-up.sign-up</mat-card-title>\n    </mat-card-header>\n    <form [formGroup]=\"signUpForm\">\n      <mat-card class=\"form-container prop-info mat-elevation-z4\">\n        <mat-form-field class=\"form-element\">\n          <mat-label translate>sign-up.email</mat-label>\n          <input matInput type=\"email\" formControlName=\"email\"/>\n          <mat-error *ngIf=\"!repeatedEmail\"><span translate>sign-up.invalid-email-error</span></mat-error>\n          <mat-error *ngIf=\"repeatedEmail\"><span translate>sign-up.repeated-email-error</span></mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-element password\">\n          <mat-label translate>sign-up.password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\"/>\n          <mat-error><span translate>sign-up.required-field-error</span></mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-element repeatPassword\">\n          <mat-label translate>sign-up.repeat-password</mat-label>\n          <input matInput type=\"password\" formControlName=\"repeatPassword\"/>\n          <mat-error ><span translate> sign-up.password-mismatch</span></mat-error>\n        </mat-form-field>\n        <div class=\"field-row form-element\">\n          <mat-form-field class=\"first-name\">\n            <mat-label translate>sign-up.first-name</mat-label>\n            <input matInput type=\"text\" formControlName=\"name\"/>\n            <mat-error><span translate>sign-up.required-field-error</span></mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label translate>sign-up.last-name</mat-label>\n            <input matInput type=\"text\" formControlName=\"lastName\"/>\n            <mat-error><span translate>sign-up.required-field-error</span></mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"field-row form-element\">\n          <mat-form-field class=\"phone\">\n              <mat-label translate>sign-up.phone</mat-label>\n              <input matInput type=\"text\" formControlName=\"phoneNumber\"/>\n              <mat-error><span translate>sign-up.required-field-error</span></mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label translate>sign-up.birthday</mat-label>\n            <input matInput type=\"date\" formControlName=\"birthdate\"/>\n            <mat-error><span translate>sign-up.required-field-error</span></mat-error>\n          </mat-form-field>\n        </div>\n        \n        \n        <mat-form-field class=\"form-element\">\n          <mat-label translate>sign-up.i-am-a</mat-label>\n          <mat-select formControlName=\"role\">\n              <mat-option value=\"ROLE_GUEST\"><span translate>sign-up.student</span></mat-option>\n              <mat-option value=\"ROLE_HOST\"><span translate>sign-up.host</span></mat-option>\n          </mat-select>\n          <mat-error><span translate>sign-up.required-field-error</span></mat-error>\n        </mat-form-field>\n        <div class=\"field-row form-element\" *ngIf=\"isGuest\">\n          <mat-form-field>\n            <mat-label translate>sign-up.university</mat-label>\n            <mat-select formControlName=\"university\">\n              <mat-option *ngFor=\"let university of universities\" [value]=\"university\"> {{ university.name }}</mat-option>\n            </mat-select>\n            <mat-error><span translate>sign-up.required-field-error</span></mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label translate>sign-up.career</mat-label>\n            <mat-select formControlName=\"career\">\n              <mat-option *ngFor=\"let career of careers\" [value]=\"career\"> {{ career.name }}</mat-option>\n            </mat-select>\n            <mat-error><span translate>sign-up.required-field-error</span></mat-error>\n          </mat-form-field>\n        </div>\n\n        <mat-form-field class=\"form-element\">\n          <mat-label translate>sign-up.gender</mat-label>\n          <mat-select formControlName=\"gender\">\n              <mat-option value=\"0\"><span translate>sign-up.male</span></mat-option>\n              <mat-option value=\"1\"><span translate>sign-up.female</span></mat-option>\n              <mat-option value=\"2\"><span translate>sign-up.other</span></mat-option>\n          </mat-select>\n          <mat-error><span translate>sign-up.required-field-error</span></mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-element bio\">\n          <mat-label translate>sign-up.bio</mat-label>\n          <textarea class=\"bio-form\" matInput cdkTextareaAutosize cdkAutosizeMinRows=\"5\" cdkAutosizeMinRows=\"7\" formControlName=\"bio\"></textarea>\n          <mat-error><span translate>sign-up.required-field-error</span></mat-error>\n        </mat-form-field>\n\n\n        <mat-card-footer>\n          <a routerLink=\"/login\" translate> \n            sign-up.login-message\n          </a>\n        </mat-card-footer>\n      </mat-card>\n      <button class=\"btn btn-md btn-primary text-upper\" style=\"float: right;\" type=\"submit\" (click)=\"signUp()\" translate>sign-up.sign-up</button>\n    </form>\n  </div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Rule } from './models/rule';\nimport { Service } from './models/service';\nimport { Neighborhood } from './models/neighborhood';\nimport { TranslateService } from '@ngx-translate/core';\nimport { take } from 'rxjs/operators';\nimport { University } from './models/university';\nimport { Career } from './models/career';\n\nconst BASE_API_URL = 'http://localhost:8080/api/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetadataService {\n\n  // allRules: BehaviourSubject<Rule[]>;\n  // allServices: Service[];\n\n\n  constructor(private http: HttpClient, private translateService: TranslateService) { }\n\n  getAllRules(): Observable<Rule[]> {\n    return this.http.get<Rule[]>(BASE_API_URL + 'property/rule/');\n  }\n\n\n  getAllServices(): Observable<Service[]> {\n    return this.http.get<Service[]>(BASE_API_URL + 'property/service/');\n  }\n\n  getAllNeighborhoods(): Observable<Neighborhood[]> {\n    return this.http.get<Neighborhood[]>(BASE_API_URL + 'property/neighbourhood/');\n  }\n\n  getAllUniversities(): Observable<University[]> {\n    return this.http.get<University[]> (BASE_API_URL + 'user/university')\n  }\n\n  getAllCareers(): Observable<Career[]> {\n    return this.http.get<Career[]> (BASE_API_URL + 'user/career')\n  }\n\n  translateMetadataArray(input: Rule[] | Service[]){\n    if (!input){\n      return;\n    }\n    input.forEach((elem) => {\n      console.log(elem);\n      this.translateService.get(elem.name).pipe(take(1)).subscribe((value) => {\n        elem.translatedText = value;\n        console.log(value);\n      });\n    })\n  }\n\n}\n","import { Neighborhood } from './neighborhood';\nimport { Image } from './image';\nimport { Rule } from './rule';\nimport { Service } from './service';\nimport {User} from \"./user\";\n\nexport class Property {\n  id: number;\n  caption: string;\n  description: string;\n  propertyType: PropertyType;\n  neighbourhood: Neighborhood;\n  address: string;\n  privacyLevel: PrivacyLevel;\n  capacity: number;\n  price: number;\n  availability: Availability;\n  mainImage: Image;\n  images: Image[];\n  owner: User;\n  rules: Rule[];\n  services: Service[];\n}\n\nexport type PropertyType  = 'HOUSE' | 'APARTMENT' | 'LOFT';\nexport const PropertyType = {\n  House: 'HOUSE' as PropertyType,\n  Apartment: 'APARTMENT' as PropertyType,\n  Loft: 'LOFT' as PropertyType\n};\n\nexport type PrivacyLevel  = true | false;\nexport const PrivacyLevel = {\n  Shared: true as PrivacyLevel,\n  Individual: false as PrivacyLevel\n};\n\nexport type Availability  = 'AVAILABLE' | 'RENTED';\nexport const Availability = {\n  Available: 'AVAILABLE' as Availability,\n  Rented: 'RENTED' as Availability,\n};\n\nexport type SortOption = 'NEWEST' |\n                          'CAPACITY_DESC' |\n                          'CAPACITY' |\n                          'PRINCE_DESC' |\n                          'PRICE' |\n                          'BUDGET_DESC' |\n                          'BUDGET';\nexport const SortOption = {\n  Newest: 'NEWEST' as SortOption,\n  HighestCapacity: 'CAPACITY_DESC' as SortOption,\n  LowestCapacity: 'CAPACITY' as SortOption,\n  HighestPrice: 'PRICE_DESC' as SortOption,\n  LowestPrice: 'PRICE' as SortOption,\n  HighestBudget: 'BUDGET_DESC' as SortOption,\n  LowestBudget: 'BUDGET' as SortOption,\n};\n","import {Property} from \"./property\";\nimport {UserProposal} from \"./userProposal\";\nimport {University} from \"./university\";\nimport {Career} from \"./career\";\nimport {Proposal} from \"./proposal\";\n\nexport class User {\n  id: number;\n  email: string;\n  name: string;\n  lastName: string;\n  birthDate: Date;\n  gender: Gender;\n  password: string;\n  university: University;\n  career: Career;\n  bio: string;\n  phoneNumber: string;\n  role: Role;\n  interestedProperties: Property[]; //GUEST\n  userProposals: UserProposal[]; //GUEST\n  ownedProperties: Property[]; //HOST\n  hostProposals: Proposal[]; //HOST\n}\n\nexport type Role = 'ROLE_GUEST' | 'ROLE_HOST';\nexport const Role = {\n  Guest: 'ROLE_GUEST' as Role,\n  Host: 'ROLE_HOST' as Role\n};\n\nexport type Gender = 'MALE' | 'FEMALE' | 'OTHER';\nexport const Gender = {\n  Male: 'MALE' as Gender,\n  Female: 'FEMALE' as Gender,\n  Other: 'OTHER' as Gender\n};\n\n\nexport class SignUpForm {\n  email: string;\n  password: string;\n  name:string ;\n  lastName: string;\n  phoneNumber: number;\n  birthDate: string;\n  role: number;\n  universityId: number;\n  careerId: number;\n  bio: string;\n  gender: number;\n}","import {Proposal} from \"./proposal\";\nimport {User} from \"./user\";\n\nexport class UserProposal {\n  id: number;\n  user: User;\n  proposal: Proposal;\n  state: UserProposalState;\n}\n\nexport type UserProposalState = 'PENDING' | 'ACCEPTED' | 'REJECTED';\nexport const UserProposalState = {\n  Pending: 'PENDING' as UserProposalState,\n  Accepted: 'ACCEPTED' as UserProposalState,\n  Rejected: 'REJECTED' as UserProposalState\n};\n","import { NgModule } from '@angular/core';\n\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from \"@angular/material/tabs\";\n\n@NgModule({\n  imports: [\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatGridListModule,\n    MatIconModule,\n    MatTableModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatMenuModule,\n    MatTabsModule\n  ],\n  exports: [\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatGridListModule,\n    MatIconModule,\n    MatTableModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatMenuModule,\n    MatTabsModule\n  ]\n})\nexport class MaterialModule {}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthenticationService, public router: Router){}\n\n  canActivate(): boolean {\n    // if(this.auth.getAuthToken() === ''){\n    //   console.log(\"Hola\");\n    //   this.router.navigate(['login']);\n    //   return false;\n    // }\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\nimport {User, SignUpForm} from \"../models/user\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { take, tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nconst BASE_API_URL = 'http://localhost:8080/api/';\nconst LOCAL_STORAGE_AUTH_TOKEN = 'aluToken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private authToken: string;\n  private currentUserSubject= new BehaviorSubject<User>(null);\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient,\n              private router: Router){\n    if (localStorage.getItem(LOCAL_STORAGE_AUTH_TOKEN)){\n      this.authToken = localStorage.getItem(LOCAL_STORAGE_AUTH_TOKEN);\n    }\n  }\n\n  getCurrentUser(): Observable<User>{\n    this.http.get<User>(BASE_API_URL + 'user').pipe(take(1)).subscribe(\n      (user) => {\n        this.currentUserSubject.next(<User>user);\n      }\n    );\n    return this.currentUserSubject.asObservable();\n  }\n\n  signUp(signUpForm: SignUpForm){\n    console.log(signUpForm);\n    return this.http.post<User>(BASE_API_URL + 'auth/signup', signUpForm, {observe: 'response'}).pipe(tap(\n      (response)=>{\n        this.setAuthToken(response.headers.get('X-TOKEN'));\n        this.currentUserSubject.next(response.body);\n      })\n    );\n  }\n\n  login(signUpForm: any){\n    return this.http.post<User>(BASE_API_URL + 'login', signUpForm, {observe: 'response'}).pipe(tap(\n      (response)=>{\n        this.setAuthToken(response.headers.get('X-TOKEN'));\n        this.currentUserSubject.next(response.body);\n      })\n    );\n  }\n\n  getAuthToken(): string {\n    return this.authToken;\n  }\n\n  setAuthToken(newVal: string): void {\n    this.authToken = newVal;\n    localStorage.setItem(LOCAL_STORAGE_AUTH_TOKEN, newVal);\n  }\n\n  logout(): Subscription {\n    this.currentUserSubject.next(null);\n    return this.http.post<User>(BASE_API_URL + 'auth/logout/', null)\n      .subscribe(response => {\n        this.setAuthToken(null);\n        this.router.navigate([\"/login\"]);\n      })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, from } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nconst BASE_API_URL = 'http://localhost:8080/api/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  constructor(private http: HttpClient) { }\n\n  getImage(imageId: number): Observable<any>{\n    return this.http.get<Blob>(BASE_API_URL + 'image/' + imageId, {observe: 'body', responseType: 'blob' as 'json'}).pipe(\n      switchMap(\n        val => from( // create the observable from a promise\n          new Promise((resolve, reject) => { //create a new Promise                          \n            const reader = new FileReader();\n            reader.readAsDataURL(val);\n            reader.onloadend = () => resolve(reader.result); //resolve when it finishes to load the file\n            reader.onerror = () => reject(reader.error); //rejects if there was an error while reading the file\n          })\n        )\n      )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Notification } from 'src/app/models/notification';\n\nconst BASE_API_URL = 'http://localhost:8080/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private http: HttpClient) { }\n\n  getUnread(): Observable<Notification[]> {\n    return this.http.get<Notification[]>(BASE_API_URL + '/notification');\n  }\n\n  getAll(): Observable<Notification[]> {\n    return this.http.get<Notification[]>(BASE_API_URL + '/notification');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { PageRequest } from '../interfaces/page-request';\nimport { Observable } from 'rxjs';\nimport { Property } from '../models/property';\nimport { PageResponse } from '../interfaces/page-response';\nimport {Proposal} from \"../models/proposal\";\nimport {User} from \"../models/user\";\n\nconst BASE_API_URL = 'http://localhost:8080/api/';\nconst BASE_API_URL_PROPERTY = 'http://localhost:8080/api/property/';\nconst BASE_API_URL_PROPERTY_IS_CURRENT_USER_INTERESTED = 'http://localhost:8080/api/guest/interested/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Access-Control-Allow-Origin':'*',\n    'Authorization':'authkey',\n    'userid':'1'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropertyService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(pageRequest: PageRequest): Observable<PageResponse<Property>>{\n    let params = {pageSize: String(pageRequest.pageSize), pageNumber: String(pageRequest.pageNumber) };\n    return this.http.get<PageResponse<Property>>(BASE_API_URL + 'property/', {params: params});\n  }\n\n  search(pageRequest: PageRequest, searchParams: any){\n    let params = {pageSize: String(pageRequest.pageSize), pageNumber: String(pageRequest.pageNumber), ...searchParams};\n    console.log(params);\n    return this.http.get<PageResponse<Property>>(BASE_API_URL + 'property/search/', {params: params});\n  }\n\n  getById(id: number): Observable<Property>{\n    console.log(BASE_API_URL_PROPERTY+id);\n    return this.http.get<Property>(BASE_API_URL_PROPERTY+id);\n  }\n\n  publishProperty(property: Property): Observable<Property> {\n    console.log('Posting property:');\n    console.log(property);\n    return this.http.post<Property>(BASE_API_URL + 'host/createProperty/', property);\n  }\n\n  getInterestedUsersByPropertyId(id: number): Observable<User[]> {\n    return this.http.get<User[]>(BASE_API_URL_PROPERTY + id + '/interestedUsers');\n  }\n\n  isCurrentUserInterested(id: number): Observable<boolean> {\n    return this.http.get<boolean>(BASE_API_URL_PROPERTY_IS_CURRENT_USER_INTERESTED+id);\n  }\n\n  changePropertyAvailability(propertyId: number) {\n    console.log('Pausing property:');\n    console.log(propertyId);\n    return this.http.post(BASE_API_URL + 'host/changeStatus/' + propertyId, {});\n  }\n\n  markInterest(propertyId: number) {\n    console.log('Marking interest:');\n    console.log(propertyId);\n    return this.http.post(BASE_API_URL + 'guest/' + propertyId + '/interested', {});\n  }\n\n  markUninterest(propertyId: number) {\n    console.log('Marking uninterest:');\n    console.log(propertyId);\n    return this.http.post(BASE_API_URL + 'guest/' + propertyId + '/uninterested', {});\n  }\n\n  deleteProperty(propertyId: number) {\n    console.log('Deleting property:');\n    console.log(propertyId);\n    return this.http.post(BASE_API_URL + 'host/delete/' + propertyId, {});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {PageRequest} from \"../interfaces/page-request\";\nimport {Observable} from \"rxjs\";\nimport {Proposal} from \"../models/proposal\";\nimport {UserProposal} from \"../models/userProposal\";\nimport {User} from \"../models/user\";\nimport {Property} from \"../models/property\";\n\nconst BASE_API_URL = 'http://localhost:8080/api/';\nconst BASE_API_URL_PROPOSAL = 'http://localhost:8080/api/proposal/';\nconst BASE_API_URL_PROPOSAL_USER_INFO = 'http://localhost:8080/api/guest/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProposalService {\n\n  users: UserProposal[];\n  proposal: Proposal;\n  creatorUserProposal: UserProposal;\n\n  constructor(private http: HttpClient) { }\n\n  getById(id: number): Observable<Proposal>{\n    return this.http.get<Proposal>(BASE_API_URL_PROPOSAL+id);\n  }\n\n  getAllUserProposals(id: number): Observable<UserProposal[]>{\n    return this.http.get<UserProposal[]>(BASE_API_URL_PROPOSAL+id+'/userProposals');\n  }\n\n  getCreatorUserProposal(id: number): Observable<UserProposal>{\n    return this.http.get<UserProposal>(BASE_API_URL_PROPOSAL+id+'/creatorUserProposal');\n  }\n\n  getGuestUserInfoByProposalId(id: Number): Observable<any>{\n    return this.http.get<any>(BASE_API_URL_PROPOSAL_USER_INFO+id+'/userInfo');\n  }\n\n  createProposal(invitedUserIds: number[], propertyId: number): Observable<Proposal> {\n    console.log('Creating proposal:');\n    console.log(invitedUserIds);\n    const payload = {inviteeIds: invitedUserIds};\n    return this.http.post<Proposal>(BASE_API_URL + 'guest/proposal/' + propertyId, payload);\n  }\n}\n","// src/app/auth/token.interceptor.ts\nimport { Injectable, Injector } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable, EMPTY } from 'rxjs';\nimport { tap, filter, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthenticationService,\n              private router: Router) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.authService.getAuthToken()){\n      // console.log(request);\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this.authService.getAuthToken()}`\n        }\n      });\n    }\n    \n    return next.handle(request).pipe(catchError(\n      (response: HttpErrorResponse) => {\n        if (response.status >= 404 && response.status < 500){\n          this.router.navigate(['/error/404']);\n        }\n        if (response.status >= 500 && response.status < 600){\n          this.router.navigate(['/error/500']);\n        }\n        return EMPTY;\n      })\n    );\n  }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {PageRequest} from \"../interfaces/page-request\";\nimport {Observable} from \"rxjs\";\nimport {PageResponse} from \"../interfaces/page-response\";\nimport {User} from \"../models/user\";\nimport {UserProposal} from \"../models/userProposal\";\nimport {Proposal} from \"../models/proposal\";\nimport {Property} from \"../models/property\";\n\nconst BASE_API_URL = 'http://localhost:8080/api/user';\nconst BASE_API_URL_USER_PROPOSALS = 'http://localhost:8080/api/guest/proposals';\nconst BASE_API_URL_PROPOSALS = 'http://localhost:8080/api/host/proposals';\nconst BASE_API_URL_OWNED_PROPERTIES = 'http://localhost:8080/api/host/properties';\nconst BASE_API_URL_INTERESTED_PROPERTIES = 'http://localhost:8080/api/guest/interests';\nconst BASE_API_URL_IS_USER_LOGGED_IN = 'http://localhost:8080/api/user/loginStatus';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getUserById(id: number): Observable<User>{\n    console.log(BASE_API_URL + '/' + id);\n    return this.http.get<User>(BASE_API_URL + '/' + id);\n  }\n\n  getAllProposalsFromUserProposals(pageRequest: PageRequest): Observable<PageResponse<Proposal>>{\n    let params = {pageSize: String(pageRequest.pageSize), pageNumber: String(pageRequest.pageNumber) };\n    return this.http.get<PageResponse<Proposal>>(BASE_API_URL_USER_PROPOSALS, {params: params});\n  }\n\n  getAllProposals(pageRequest: PageRequest): Observable<PageResponse<Proposal>>{\n    let params = {pageSize: String(pageRequest.pageSize), pageNumber: String(pageRequest.pageNumber) };\n    return this.http.get<PageResponse<Proposal>>(BASE_API_URL_PROPOSALS, {params: params});\n  }\n\n  getAllOwnedProperties(pageRequest: PageRequest): Observable<PageResponse<Property>>{\n    let params = {pageSize: String(pageRequest.pageSize), pageNumber: String(pageRequest.pageNumber) };\n    return this.http.get<PageResponse<Property>>(BASE_API_URL_OWNED_PROPERTIES, {params: params});\n  }\n\n  getAllInterestedProperties(pageRequest: PageRequest): Observable<PageResponse<Property>>{\n    let params = {pageSize: String(pageRequest.pageSize), pageNumber: String(pageRequest.pageNumber) };\n    return this.http.get<PageResponse<Property>>(BASE_API_URL_INTERESTED_PROPERTIES, {params: params});\n  }\n\n  isUserLoggedIn(): Observable<boolean>{\n    return this.http.get<boolean>(BASE_API_URL_IS_USER_LOGGED_IN);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}